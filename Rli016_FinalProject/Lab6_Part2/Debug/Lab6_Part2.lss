
Lab6_Part2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00001022  000010b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001022  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  0080010e  0080010e  000010c4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000010c4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000010f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00001134  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001972  00000000  00000000  000011f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000905  00000000  00000000  00002b66  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e94  00000000  00000000  0000346b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001bc  00000000  00000000  00004300  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005a0  00000000  00000000  000044bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000058f  00000000  00000000  00004a5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00004feb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
       6:	00 00       	nop
       8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
       a:	00 00       	nop
       c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
       e:	00 00       	nop
      10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
      12:	00 00       	nop
      14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
      16:	00 00       	nop
      18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
      22:	00 00       	nop
      24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
      26:	00 00       	nop
      28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
      32:	00 00       	nop
      34:	a9 c0       	rjmp	.+338    	; 0x188 <__vector_13>
      36:	00 00       	nop
      38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
      42:	00 00       	nop
      44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
      46:	00 00       	nop
      48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
      52:	00 00       	nop
      54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
      56:	00 00       	nop
      58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
      62:	00 00       	nop
      64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
      66:	00 00       	nop
      68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
      72:	00 00       	nop
      74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
      76:	00 00       	nop
      78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
      82:	00 00       	nop
      84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
      86:	00 00       	nop
      88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e2 e2       	ldi	r30, 0x22	; 34
      a0:	f0 e1       	ldi	r31, 0x10	; 16
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	ae 30       	cpi	r26, 0x0E	; 14
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	21 e0       	ldi	r18, 0x01	; 1
      b4:	ae e0       	ldi	r26, 0x0E	; 14
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a8 32       	cpi	r26, 0x28	; 40
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	83 d4       	rcall	.+2310   	; 0x9ca <main>
      c4:	ac c7       	rjmp	.+3928   	; 0x101e <_exit>

000000c6 <__bad_interrupt>:
      c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <delay_ms>:
	set_PWM(0);
}

void PWM_off() {
	TCCR3A = 0x00;
	TCCR3B = 0x00;
      c8:	18 16       	cp	r1, r24
      ca:	19 06       	cpc	r1, r25
      cc:	5c f0       	brlt	.+22     	; 0xe4 <delay_ms+0x1c>
      ce:	08 95       	ret
      d0:	00 00       	nop
      d2:	21 50       	subi	r18, 0x01	; 1
      d4:	31 09       	sbc	r19, r1
      d6:	e1 f7       	brne	.-8      	; 0xd0 <delay_ms+0x8>
      d8:	4f 5f       	subi	r20, 0xFF	; 255
      da:	5f 4f       	sbci	r21, 0xFF	; 255
      dc:	84 17       	cp	r24, r20
      de:	95 07       	cpc	r25, r21
      e0:	19 f4       	brne	.+6      	; 0xe8 <delay_ms+0x20>
      e2:	08 95       	ret
      e4:	40 e0       	ldi	r20, 0x00	; 0
      e6:	50 e0       	ldi	r21, 0x00	; 0
      e8:	27 e0       	ldi	r18, 0x07	; 7
      ea:	33 e0       	ldi	r19, 0x03	; 3
      ec:	f1 cf       	rjmp	.-30     	; 0xd0 <delay_ms+0x8>

000000ee <LCD_WriteCommand>:
      ee:	5e 98       	cbi	0x0b, 6	; 11
      f0:	88 b9       	out	0x08, r24	; 8
      f2:	5f 9a       	sbi	0x0b, 7	; 11
      f4:	00 00       	nop
      f6:	5f 98       	cbi	0x0b, 7	; 11
      f8:	82 e0       	ldi	r24, 0x02	; 2
      fa:	90 e0       	ldi	r25, 0x00	; 0
      fc:	e5 cf       	rjmp	.-54     	; 0xc8 <delay_ms>
      fe:	08 95       	ret

00000100 <LCD_Cursor>:
     100:	81 31       	cpi	r24, 0x11	; 17
     102:	18 f4       	brcc	.+6      	; 0x10a <LCD_Cursor+0xa>
     104:	81 58       	subi	r24, 0x81	; 129
     106:	f3 cf       	rjmp	.-26     	; 0xee <LCD_WriteCommand>
     108:	08 95       	ret
     10a:	81 55       	subi	r24, 0x51	; 81
     10c:	f0 cf       	rjmp	.-32     	; 0xee <LCD_WriteCommand>
     10e:	08 95       	ret

00000110 <LCD_init>:
     110:	84 e6       	ldi	r24, 0x64	; 100
     112:	90 e0       	ldi	r25, 0x00	; 0
     114:	d9 df       	rcall	.-78     	; 0xc8 <delay_ms>
     116:	88 e3       	ldi	r24, 0x38	; 56
     118:	ea df       	rcall	.-44     	; 0xee <LCD_WriteCommand>
     11a:	86 e0       	ldi	r24, 0x06	; 6
     11c:	e8 df       	rcall	.-48     	; 0xee <LCD_WriteCommand>
     11e:	8f e0       	ldi	r24, 0x0F	; 15
     120:	e6 df       	rcall	.-52     	; 0xee <LCD_WriteCommand>
     122:	81 e0       	ldi	r24, 0x01	; 1
     124:	e4 df       	rcall	.-56     	; 0xee <LCD_WriteCommand>
     126:	8a e0       	ldi	r24, 0x0A	; 10
     128:	90 e0       	ldi	r25, 0x00	; 0
     12a:	ce cf       	rjmp	.-100    	; 0xc8 <delay_ms>
     12c:	08 95       	ret

0000012e <LCD_WriteData>:
     12e:	5e 9a       	sbi	0x0b, 6	; 11
     130:	88 b9       	out	0x08, r24	; 8
     132:	5f 9a       	sbi	0x0b, 7	; 11
     134:	00 00       	nop
     136:	5f 98       	cbi	0x0b, 7	; 11
     138:	81 e0       	ldi	r24, 0x01	; 1
     13a:	90 e0       	ldi	r25, 0x00	; 0
     13c:	c5 cf       	rjmp	.-118    	; 0xc8 <delay_ms>
     13e:	08 95       	ret

00000140 <TimerOn>:
     140:	8b e0       	ldi	r24, 0x0B	; 11
     142:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     146:	8d e7       	ldi	r24, 0x7D	; 125
     148:	90 e0       	ldi	r25, 0x00	; 0
     14a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     14e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     152:	82 e0       	ldi	r24, 0x02	; 2
     154:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     158:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     15c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     160:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <_avr_timer_M>
     164:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <_avr_timer_M+0x1>
     168:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <_avr_timer_M+0x2>
     16c:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <_avr_timer_M+0x3>
     170:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <_avr_timer_cntcurr>
     174:	90 93 24 01 	sts	0x0124, r25	; 0x800124 <_avr_timer_cntcurr+0x1>
     178:	a0 93 25 01 	sts	0x0125, r26	; 0x800125 <_avr_timer_cntcurr+0x2>
     17c:	b0 93 26 01 	sts	0x0126, r27	; 0x800126 <_avr_timer_cntcurr+0x3>
     180:	8f b7       	in	r24, 0x3f	; 63
     182:	80 68       	ori	r24, 0x80	; 128
     184:	8f bf       	out	0x3f, r24	; 63
     186:	08 95       	ret

00000188 <__vector_13>:
     188:	1f 92       	push	r1
     18a:	0f 92       	push	r0
     18c:	0f b6       	in	r0, 0x3f	; 63
     18e:	0f 92       	push	r0
     190:	11 24       	eor	r1, r1
     192:	8f 93       	push	r24
     194:	9f 93       	push	r25
     196:	af 93       	push	r26
     198:	bf 93       	push	r27
     19a:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <_avr_timer_cntcurr>
     19e:	90 91 24 01 	lds	r25, 0x0124	; 0x800124 <_avr_timer_cntcurr+0x1>
     1a2:	a0 91 25 01 	lds	r26, 0x0125	; 0x800125 <_avr_timer_cntcurr+0x2>
     1a6:	b0 91 26 01 	lds	r27, 0x0126	; 0x800126 <_avr_timer_cntcurr+0x3>
     1aa:	01 97       	sbiw	r24, 0x01	; 1
     1ac:	a1 09       	sbc	r26, r1
     1ae:	b1 09       	sbc	r27, r1
     1b0:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <_avr_timer_cntcurr>
     1b4:	90 93 24 01 	sts	0x0124, r25	; 0x800124 <_avr_timer_cntcurr+0x1>
     1b8:	a0 93 25 01 	sts	0x0125, r26	; 0x800125 <_avr_timer_cntcurr+0x2>
     1bc:	b0 93 26 01 	sts	0x0126, r27	; 0x800126 <_avr_timer_cntcurr+0x3>
     1c0:	89 2b       	or	r24, r25
     1c2:	8a 2b       	or	r24, r26
     1c4:	8b 2b       	or	r24, r27
     1c6:	99 f4       	brne	.+38     	; 0x1ee <__vector_13+0x66>
     1c8:	81 e0       	ldi	r24, 0x01	; 1
     1ca:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <TimerFlag>
     1ce:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <_avr_timer_M>
     1d2:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <_avr_timer_M+0x1>
     1d6:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <_avr_timer_M+0x2>
     1da:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <_avr_timer_M+0x3>
     1de:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <_avr_timer_cntcurr>
     1e2:	90 93 24 01 	sts	0x0124, r25	; 0x800124 <_avr_timer_cntcurr+0x1>
     1e6:	a0 93 25 01 	sts	0x0125, r26	; 0x800125 <_avr_timer_cntcurr+0x2>
     1ea:	b0 93 26 01 	sts	0x0126, r27	; 0x800126 <_avr_timer_cntcurr+0x3>
     1ee:	bf 91       	pop	r27
     1f0:	af 91       	pop	r26
     1f2:	9f 91       	pop	r25
     1f4:	8f 91       	pop	r24
     1f6:	0f 90       	pop	r0
     1f8:	0f be       	out	0x3f, r0	; 63
     1fa:	0f 90       	pop	r0
     1fc:	1f 90       	pop	r1
     1fe:	18 95       	reti

00000200 <TimerSet>:
     200:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <_avr_timer_M>
     204:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <_avr_timer_M+0x1>
     208:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <_avr_timer_M+0x2>
     20c:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <_avr_timer_M+0x3>
     210:	60 93 23 01 	sts	0x0123, r22	; 0x800123 <_avr_timer_cntcurr>
     214:	70 93 24 01 	sts	0x0124, r23	; 0x800124 <_avr_timer_cntcurr+0x1>
     218:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <_avr_timer_cntcurr+0x2>
     21c:	90 93 26 01 	sts	0x0126, r25	; 0x800126 <_avr_timer_cntcurr+0x3>
     220:	08 95       	ret

00000222 <set_PWM>:
     222:	cf 92       	push	r12
     224:	df 92       	push	r13
     226:	ef 92       	push	r14
     228:	ff 92       	push	r15
     22a:	6b 01       	movw	r12, r22
     22c:	7c 01       	movw	r14, r24
     22e:	9b 01       	movw	r18, r22
     230:	ac 01       	movw	r20, r24
     232:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <__data_end>
     236:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <__data_end+0x1>
     23a:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end+0x2>
     23e:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <__data_end+0x3>
     242:	74 d5       	rcall	.+2792   	; 0xd2c <__cmpsf2>
     244:	88 23       	and	r24, r24
     246:	09 f4       	brne	.+2      	; 0x24a <set_PWM+0x28>
     248:	52 c0       	rjmp	.+164    	; 0x2ee <set_PWM+0xcc>
     24a:	20 e0       	ldi	r18, 0x00	; 0
     24c:	30 e0       	ldi	r19, 0x00	; 0
     24e:	a9 01       	movw	r20, r18
     250:	c7 01       	movw	r24, r14
     252:	b6 01       	movw	r22, r12
     254:	6b d5       	rcall	.+2774   	; 0xd2c <__cmpsf2>
     256:	81 11       	cpse	r24, r1
     258:	06 c0       	rjmp	.+12     	; 0x266 <set_PWM+0x44>
     25a:	e1 e9       	ldi	r30, 0x91	; 145
     25c:	f0 e0       	ldi	r31, 0x00	; 0
     25e:	80 81       	ld	r24, Z
     260:	88 70       	andi	r24, 0x08	; 8
     262:	80 83       	st	Z, r24
     264:	05 c0       	rjmp	.+10     	; 0x270 <set_PWM+0x4e>
     266:	e1 e9       	ldi	r30, 0x91	; 145
     268:	f0 e0       	ldi	r31, 0x00	; 0
     26a:	80 81       	ld	r24, Z
     26c:	83 60       	ori	r24, 0x03	; 3
     26e:	80 83       	st	Z, r24
     270:	28 e5       	ldi	r18, 0x58	; 88
     272:	39 e3       	ldi	r19, 0x39	; 57
     274:	44 e7       	ldi	r20, 0x74	; 116
     276:	5f e3       	ldi	r21, 0x3F	; 63
     278:	c7 01       	movw	r24, r14
     27a:	b6 01       	movw	r22, r12
     27c:	57 d5       	rcall	.+2734   	; 0xd2c <__cmpsf2>
     27e:	88 23       	and	r24, r24
     280:	3c f4       	brge	.+14     	; 0x290 <set_PWM+0x6e>
     282:	8f ef       	ldi	r24, 0xFF	; 255
     284:	9f ef       	ldi	r25, 0xFF	; 255
     286:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     28a:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     28e:	23 c0       	rjmp	.+70     	; 0x2d6 <set_PWM+0xb4>
     290:	20 e0       	ldi	r18, 0x00	; 0
     292:	34 e2       	ldi	r19, 0x24	; 36
     294:	44 ef       	ldi	r20, 0xF4	; 244
     296:	56 e4       	ldi	r21, 0x46	; 70
     298:	c7 01       	movw	r24, r14
     29a:	b6 01       	movw	r22, r12
     29c:	59 d6       	rcall	.+3250   	; 0xf50 <__gesf2>
     29e:	18 16       	cp	r1, r24
     2a0:	2c f4       	brge	.+10     	; 0x2ac <set_PWM+0x8a>
     2a2:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     2a6:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     2aa:	15 c0       	rjmp	.+42     	; 0x2d6 <set_PWM+0xb4>
     2ac:	20 e0       	ldi	r18, 0x00	; 0
     2ae:	30 e0       	ldi	r19, 0x00	; 0
     2b0:	40 e0       	ldi	r20, 0x00	; 0
     2b2:	53 e4       	ldi	r21, 0x43	; 67
     2b4:	c7 01       	movw	r24, r14
     2b6:	b6 01       	movw	r22, r12
     2b8:	4f d6       	rcall	.+3230   	; 0xf58 <__mulsf3>
     2ba:	9b 01       	movw	r18, r22
     2bc:	ac 01       	movw	r20, r24
     2be:	60 e0       	ldi	r22, 0x00	; 0
     2c0:	74 e2       	ldi	r23, 0x24	; 36
     2c2:	84 ef       	ldi	r24, 0xF4	; 244
     2c4:	9a e4       	ldi	r25, 0x4A	; 74
     2c6:	36 d5       	rcall	.+2668   	; 0xd34 <__divsf3>
     2c8:	9d d5       	rcall	.+2874   	; 0xe04 <__fixsfsi>
     2ca:	61 50       	subi	r22, 0x01	; 1
     2cc:	71 09       	sbc	r23, r1
     2ce:	70 93 99 00 	sts	0x0099, r23	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     2d2:	60 93 98 00 	sts	0x0098, r22	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     2d6:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
     2da:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7e0094>
     2de:	c0 92 0e 01 	sts	0x010E, r12	; 0x80010e <__data_end>
     2e2:	d0 92 0f 01 	sts	0x010F, r13	; 0x80010f <__data_end+0x1>
     2e6:	e0 92 10 01 	sts	0x0110, r14	; 0x800110 <__data_end+0x2>
     2ea:	f0 92 11 01 	sts	0x0111, r15	; 0x800111 <__data_end+0x3>
     2ee:	ff 90       	pop	r15
     2f0:	ef 90       	pop	r14
     2f2:	df 90       	pop	r13
     2f4:	cf 90       	pop	r12
     2f6:	08 95       	ret

000002f8 <PWM_on>:
     2f8:	80 e4       	ldi	r24, 0x40	; 64
     2fa:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
     2fe:	8b e0       	ldi	r24, 0x0B	; 11
     300:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
     304:	60 e0       	ldi	r22, 0x00	; 0
     306:	70 e0       	ldi	r23, 0x00	; 0
     308:	cb 01       	movw	r24, r22
     30a:	8b cf       	rjmp	.-234    	; 0x222 <set_PWM>
     30c:	08 95       	ret

0000030e <CLOCK_FSM>:
}
void CLOCK_FSM()
{
	if(alarm == false && noDisplay == false){
     30e:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <alarm>
     312:	81 11       	cpse	r24, r1
     314:	45 c0       	rjmp	.+138    	; 0x3a0 <CLOCK_FSM+0x92>
     316:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <noDisplay>
     31a:	81 11       	cpse	r24, r1
     31c:	41 c0       	rjmp	.+130    	; 0x3a0 <CLOCK_FSM+0x92>
		LCD_Cursor(1);
     31e:	81 e0       	ldi	r24, 0x01	; 1
     320:	ef de       	rcall	.-546    	; 0x100 <LCD_Cursor>
		LCD_WriteData(h1 + '0');
     322:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <h1>
     326:	80 5d       	subi	r24, 0xD0	; 208
		LCD_Cursor(2);
     328:	02 df       	rcall	.-508    	; 0x12e <LCD_WriteData>
     32a:	82 e0       	ldi	r24, 0x02	; 2
		LCD_WriteData(h0 + '0');
     32c:	e9 de       	rcall	.-558    	; 0x100 <LCD_Cursor>
     32e:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <h0>
		LCD_Cursor(3);
     332:	80 5d       	subi	r24, 0xD0	; 208
		LCD_WriteData(58);
     334:	fc de       	rcall	.-520    	; 0x12e <LCD_WriteData>
     336:	83 e0       	ldi	r24, 0x03	; 3
		LCD_Cursor(4);
     338:	e3 de       	rcall	.-570    	; 0x100 <LCD_Cursor>
     33a:	8a e3       	ldi	r24, 0x3A	; 58
		LCD_WriteData(m1 + '0');
     33c:	f8 de       	rcall	.-528    	; 0x12e <LCD_WriteData>
     33e:	84 e0       	ldi	r24, 0x04	; 4
     340:	df de       	rcall	.-578    	; 0x100 <LCD_Cursor>
		LCD_Cursor(5);
     342:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <m1>
		LCD_WriteData(m0 + '0');
     346:	80 5d       	subi	r24, 0xD0	; 208
     348:	f2 de       	rcall	.-540    	; 0x12e <LCD_WriteData>
		LCD_Cursor(6);
     34a:	85 e0       	ldi	r24, 0x05	; 5
     34c:	d9 de       	rcall	.-590    	; 0x100 <LCD_Cursor>
		LCD_WriteData(58);
     34e:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <m0>
		LCD_Cursor(7);
     352:	80 5d       	subi	r24, 0xD0	; 208
     354:	ec de       	rcall	.-552    	; 0x12e <LCD_WriteData>
     356:	86 e0       	ldi	r24, 0x06	; 6
		LCD_WriteData(s1 + '0');
     358:	d3 de       	rcall	.-602    	; 0x100 <LCD_Cursor>
     35a:	8a e3       	ldi	r24, 0x3A	; 58
     35c:	e8 de       	rcall	.-560    	; 0x12e <LCD_WriteData>
		LCD_Cursor(8);
     35e:	87 e0       	ldi	r24, 0x07	; 7
		LCD_WriteData(s0 + '0');
     360:	cf de       	rcall	.-610    	; 0x100 <LCD_Cursor>
     362:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <s1>
		if(tf){
			LCD_Cursor(9);
     366:	80 5d       	subi	r24, 0xD0	; 208
			LCD_WriteData(97);
     368:	e2 de       	rcall	.-572    	; 0x12e <LCD_WriteData>
     36a:	88 e0       	ldi	r24, 0x08	; 8
     36c:	c9 de       	rcall	.-622    	; 0x100 <LCD_Cursor>
			LCD_Cursor(10);
     36e:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <s0>
     372:	80 5d       	subi	r24, 0xD0	; 208
			LCD_WriteData(109);
     374:	dc de       	rcall	.-584    	; 0x12e <LCD_WriteData>
     376:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <tf>
     37a:	88 23       	and	r24, r24
		}
		else{
			LCD_Cursor(9);
     37c:	49 f0       	breq	.+18     	; 0x390 <CLOCK_FSM+0x82>
     37e:	89 e0       	ldi	r24, 0x09	; 9
     380:	bf de       	rcall	.-642    	; 0x100 <LCD_Cursor>
			LCD_WriteData(112);
     382:	81 e6       	ldi	r24, 0x61	; 97
     384:	d4 de       	rcall	.-600    	; 0x12e <LCD_WriteData>
     386:	8a e0       	ldi	r24, 0x0A	; 10
			LCD_Cursor(10);
     388:	bb de       	rcall	.-650    	; 0x100 <LCD_Cursor>
     38a:	8d e6       	ldi	r24, 0x6D	; 109
     38c:	d0 de       	rcall	.-608    	; 0x12e <LCD_WriteData>
			LCD_WriteData(109);
     38e:	08 c0       	rjmp	.+16     	; 0x3a0 <CLOCK_FSM+0x92>
     390:	89 e0       	ldi	r24, 0x09	; 9
     392:	b6 de       	rcall	.-660    	; 0x100 <LCD_Cursor>
		}
	}
	LCD_Cursor(0);
     394:	80 e7       	ldi	r24, 0x70	; 112
     396:	cb de       	rcall	.-618    	; 0x12e <LCD_WriteData>
     398:	8a e0       	ldi	r24, 0x0A	; 10
     39a:	b2 de       	rcall	.-668    	; 0x100 <LCD_Cursor>
     39c:	8d e6       	ldi	r24, 0x6D	; 109
     39e:	c7 de       	rcall	.-626    	; 0x12e <LCD_WriteData>
     3a0:	80 e0       	ldi	r24, 0x00	; 0
     3a2:	ae ce       	rjmp	.-676    	; 0x100 <LCD_Cursor>
     3a4:	08 95       	ret

000003a6 <TIME_FSM>:
}
void TIME_FSM(){
	s0++;
     3a6:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <s0>
     3aa:	8f 5f       	subi	r24, 0xFF	; 255
	if(s0 > 9){
     3ac:	8a 30       	cpi	r24, 0x0A	; 10
     3ae:	18 f4       	brcc	.+6      	; 0x3b6 <TIME_FSM+0x10>
		}
	}
	LCD_Cursor(0);
}
void TIME_FSM(){
	s0++;
     3b0:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <s0>
     3b4:	07 c0       	rjmp	.+14     	; 0x3c4 <TIME_FSM+0x1e>
	if(s0 > 9){
		s0 = 0;
     3b6:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <s0>
		s1++;
     3ba:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <s1>
     3be:	8f 5f       	subi	r24, 0xFF	; 255
     3c0:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <s1>
	}
	if(s1 > 5){
     3c4:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <s1>
     3c8:	86 30       	cpi	r24, 0x06	; 6
     3ca:	38 f0       	brcs	.+14     	; 0x3da <TIME_FSM+0x34>
		s1 = 0;
     3cc:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <s1>
		m0++;
     3d0:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <m0>
     3d4:	8f 5f       	subi	r24, 0xFF	; 255
     3d6:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <m0>
	}
	if(m0 > 9){
     3da:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <m0>
     3de:	8a 30       	cpi	r24, 0x0A	; 10
     3e0:	38 f0       	brcs	.+14     	; 0x3f0 <TIME_FSM+0x4a>
		m0 = 0;
     3e2:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <m0>
		m1++;
     3e6:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <m1>
     3ea:	8f 5f       	subi	r24, 0xFF	; 255
     3ec:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <m1>
	}
	if(m1 > 5){
     3f0:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <m1>
     3f4:	86 30       	cpi	r24, 0x06	; 6
     3f6:	38 f0       	brcs	.+14     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
		m1 = 0;
     3f8:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <m1>
		h0++;
     3fc:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <h0>
     400:	8f 5f       	subi	r24, 0xFF	; 255
     402:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <h0>
	}
	if(h0 > 9){
     406:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <h0>
     40a:	8a 30       	cpi	r24, 0x0A	; 10
     40c:	50 f0       	brcs	.+20     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
		h0 = 0;
     40e:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <h0>
		h1++;
     412:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <h1>
     416:	8f 5f       	subi	r24, 0xFF	; 255
     418:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <h1>
	}
	if(h1 == 1 && h0 == 2 && m1 == 0 && m0 == 0 && s1 == 0 && s0 == 0)
     41c:	81 30       	cpi	r24, 0x01	; 1
     41e:	31 f5       	brne	.+76     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
     420:	2d c0       	rjmp	.+90     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
     422:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <h1>
     426:	81 30       	cpi	r24, 0x01	; 1
     428:	09 f5       	brne	.+66     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
     42a:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <h0>
     42e:	82 30       	cpi	r24, 0x02	; 2
     430:	11 f5       	brne	.+68     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
     432:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <m1>
     436:	81 11       	cpse	r24, r1
     438:	24 c0       	rjmp	.+72     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
     43a:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <m0>
     43e:	81 11       	cpse	r24, r1
     440:	20 c0       	rjmp	.+64     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
     442:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <s1>
     446:	81 11       	cpse	r24, r1
     448:	1c c0       	rjmp	.+56     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
     44a:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <s0>
     44e:	81 11       	cpse	r24, r1
     450:	18 c0       	rjmp	.+48     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
		tf = !tf;
     452:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <tf>
     456:	81 e0       	ldi	r24, 0x01	; 1
     458:	89 27       	eor	r24, r25
     45a:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <tf>
     45e:	08 95       	ret
	if(h1 == 1 && h0 > 2){
		h1 = 0;
     460:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <h1>
		h0 = 1;
     464:	81 e0       	ldi	r24, 0x01	; 1
     466:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <h0>
     46a:	08 95       	ret
	}
	if(h1 > 1)
     46c:	82 30       	cpi	r24, 0x02	; 2
     46e:	48 f0       	brcs	.+18     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
		h1 = 0;
     470:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <h1>
}
     474:	08 95       	ret
		h0 = 0;
		h1++;
	}
	if(h1 == 1 && h0 == 2 && m1 == 0 && m0 == 0 && s1 == 0 && s0 == 0)
		tf = !tf;
	if(h1 == 1 && h0 > 2){
     476:	83 30       	cpi	r24, 0x03	; 3
     478:	98 f7       	brcc	.-26     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
     47a:	08 95       	ret
	}
	if(h0 > 9){
		h0 = 0;
		h1++;
	}
	if(h1 == 1 && h0 == 2 && m1 == 0 && m0 == 0 && s1 == 0 && s0 == 0)
     47c:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <h0>
     480:	fa cf       	rjmp	.-12     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
     482:	08 95       	ret

00000484 <SET_FSM>:
	if(h1 > 1)
		h1 = 0;
}
void SET_FSM()
{
	if(alarm)
     484:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <alarm>
     488:	81 11       	cpse	r24, r1
     48a:	8e c0       	rjmp	.+284    	; 0x5a8 <SET_FSM+0x124>
		return;
	LCD_Cursor(17);
     48c:	81 e1       	ldi	r24, 0x11	; 17
	LCD_WriteData(83);
     48e:	38 de       	rcall	.-912    	; 0x100 <LCD_Cursor>
	LCD_WriteData(69);
     490:	83 e5       	ldi	r24, 0x53	; 83
	LCD_WriteData(84);
     492:	4d de       	rcall	.-870    	; 0x12e <LCD_WriteData>
	LCD_WriteData(32);
     494:	85 e4       	ldi	r24, 0x45	; 69
	LCD_WriteData(84);
     496:	4b de       	rcall	.-874    	; 0x12e <LCD_WriteData>
	LCD_WriteData(73);
     498:	84 e5       	ldi	r24, 0x54	; 84
     49a:	49 de       	rcall	.-878    	; 0x12e <LCD_WriteData>
	LCD_WriteData(77);
     49c:	80 e2       	ldi	r24, 0x20	; 32
     49e:	47 de       	rcall	.-882    	; 0x12e <LCD_WriteData>
     4a0:	84 e5       	ldi	r24, 0x54	; 84
	LCD_WriteData(69);
     4a2:	45 de       	rcall	.-886    	; 0x12e <LCD_WriteData>
     4a4:	89 e4       	ldi	r24, 0x49	; 73
     4a6:	43 de       	rcall	.-890    	; 0x12e <LCD_WriteData>
	LCD_Cursor(counter);
     4a8:	8d e4       	ldi	r24, 0x4D	; 77
     4aa:	41 de       	rcall	.-894    	; 0x12e <LCD_WriteData>
     4ac:	85 e4       	ldi	r24, 0x45	; 69
     4ae:	3f de       	rcall	.-898    	; 0x12e <LCD_WriteData>
	if(tmpA == 0x01){
     4b0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     4b4:	25 de       	rcall	.-950    	; 0x100 <LCD_Cursor>
     4b6:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <tmpA>
		if (counter == 9)
     4ba:	81 30       	cpi	r24, 0x01	; 1
     4bc:	09 f0       	breq	.+2      	; 0x4c0 <SET_FSM+0x3c>
     4be:	5a c0       	rjmp	.+180    	; 0x574 <SET_FSM+0xf0>
     4c0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
			tf = !tf;
     4c4:	89 30       	cpi	r24, 0x09	; 9
     4c6:	39 f4       	brne	.+14     	; 0x4d6 <SET_FSM+0x52>
     4c8:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <tf>
     4cc:	81 e0       	ldi	r24, 0x01	; 1
     4ce:	89 27       	eor	r24, r25
		else if (counter == 8){
     4d0:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <tf>
			s0++;
     4d4:	08 95       	ret
     4d6:	88 30       	cpi	r24, 0x08	; 8
     4d8:	49 f4       	brne	.+18     	; 0x4ec <SET_FSM+0x68>
			if(s0 > 9)
     4da:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <s0>
     4de:	8f 5f       	subi	r24, 0xFF	; 255
				s0 = 0;
     4e0:	8a 30       	cpi	r24, 0x0A	; 10
     4e2:	08 f4       	brcc	.+2      	; 0x4e6 <SET_FSM+0x62>
     4e4:	5f c0       	rjmp	.+190    	; 0x5a4 <SET_FSM+0x120>
		}
		else if (counter == 7){
     4e6:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <s0>
			s1++;
     4ea:	08 95       	ret
     4ec:	87 30       	cpi	r24, 0x07	; 7
     4ee:	59 f4       	brne	.+22     	; 0x506 <SET_FSM+0x82>
			if(s1 > 5)
     4f0:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <s1>
			s0++;
			if(s0 > 9)
				s0 = 0;
		}
		else if (counter == 7){
			s1++;
     4f4:	8f 5f       	subi	r24, 0xFF	; 255
     4f6:	86 30       	cpi	r24, 0x06	; 6
     4f8:	18 f4       	brcc	.+6      	; 0x500 <SET_FSM+0x7c>
			if(s1 > 5)
				s1 = 0;
     4fa:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <s1>
     4fe:	08 95       	ret
		}
		else if (counter == 5){
     500:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <s1>
			m0++;
     504:	08 95       	ret
     506:	85 30       	cpi	r24, 0x05	; 5
     508:	59 f4       	brne	.+22     	; 0x520 <SET_FSM+0x9c>
			if(m0 > 9)
     50a:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <m0>
			s1++;
			if(s1 > 5)
				s1 = 0;
		}
		else if (counter == 5){
			m0++;
     50e:	8f 5f       	subi	r24, 0xFF	; 255
     510:	8a 30       	cpi	r24, 0x0A	; 10
     512:	18 f4       	brcc	.+6      	; 0x51a <SET_FSM+0x96>
			if(m0 > 9)
				m0 = 0;
     514:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <m0>
     518:	08 95       	ret
		}
		else if (counter == 4){
     51a:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <m0>
			m1++;
     51e:	08 95       	ret
     520:	84 30       	cpi	r24, 0x04	; 4
     522:	59 f4       	brne	.+22     	; 0x53a <SET_FSM+0xb6>
			if(m1 > 5)
     524:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <m1>
			m0++;
			if(m0 > 9)
				m0 = 0;
		}
		else if (counter == 4){
			m1++;
     528:	8f 5f       	subi	r24, 0xFF	; 255
     52a:	86 30       	cpi	r24, 0x06	; 6
     52c:	18 f4       	brcc	.+6      	; 0x534 <SET_FSM+0xb0>
			if(m1 > 5)
				m1 = 0;
     52e:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <m1>
     532:	08 95       	ret
		}
		else if (counter == 2){
     534:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <m1>
			h0++;
     538:	08 95       	ret
     53a:	82 30       	cpi	r24, 0x02	; 2
     53c:	71 f4       	brne	.+28     	; 0x55a <SET_FSM+0xd6>
     53e:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <h0>
			if(h0 > 2)
     542:	8f 5f       	subi	r24, 0xFF	; 255
     544:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <h0>
				h1 = 0;
     548:	83 30       	cpi	r24, 0x03	; 3
			if(h0 > 9)
     54a:	10 f0       	brcs	.+4      	; 0x550 <SET_FSM+0xcc>
     54c:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <h1>
				h0 = 0;
     550:	8a 30       	cpi	r24, 0x0A	; 10
     552:	50 f1       	brcs	.+84     	; 0x5a8 <SET_FSM+0x124>
		}
		else if (counter == 1){
     554:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <h0>
			h1++;
     558:	08 95       	ret
     55a:	81 30       	cpi	r24, 0x01	; 1
     55c:	91 f4       	brne	.+36     	; 0x582 <SET_FSM+0xfe>
			if(h1 > 1)
     55e:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <h1>
				h1 = 0;
			if(h0 > 9)
				h0 = 0;
		}
		else if (counter == 1){
			h1++;
     562:	8f 5f       	subi	r24, 0xFF	; 255
     564:	82 30       	cpi	r24, 0x02	; 2
     566:	18 f4       	brcc	.+6      	; 0x56e <SET_FSM+0xea>
			if(h1 > 1)
				h1 = 0;
     568:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <h1>
     56c:	08 95       	ret
		}
	}
	else if(tmpA == 0x02){
     56e:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <h1>
		counter--;
     572:	08 95       	ret
     574:	82 30       	cpi	r24, 0x02	; 2
     576:	29 f4       	brne	.+10     	; 0x582 <SET_FSM+0xfe>
     578:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
	}
	if(counter == 3 || counter == 6)
     57c:	81 50       	subi	r24, 0x01	; 1
     57e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     582:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     586:	83 30       	cpi	r24, 0x03	; 3
		counter--;
     588:	11 f0       	breq	.+4      	; 0x58e <SET_FSM+0x10a>
     58a:	86 30       	cpi	r24, 0x06	; 6
     58c:	19 f4       	brne	.+6      	; 0x594 <SET_FSM+0x110>
	if(counter < 1)
     58e:	81 50       	subi	r24, 0x01	; 1
     590:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     594:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
		counter = 9;
     598:	81 11       	cpse	r24, r1
     59a:	06 c0       	rjmp	.+12     	; 0x5a8 <SET_FSM+0x124>
     59c:	89 e0       	ldi	r24, 0x09	; 9
	LCD_Cursor(counter);
	if(tmpA == 0x01){
		if (counter == 9)
			tf = !tf;
		else if (counter == 8){
			s0++;
     59e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     5a2:	08 95       	ret
     5a4:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <s0>
     5a8:	08 95       	ret

000005aa <ALARM_FSM>:
		counter--;
	if(counter < 1)
		counter = 9;
}
void ALARM_FSM(){
	if(alarm)
     5aa:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <alarm>
     5ae:	81 11       	cpse	r24, r1
     5b0:	d7 c0       	rjmp	.+430    	; 0x760 <ALARM_FSM+0x1b6>
		return;
	LCD_Cursor(1);
     5b2:	81 e0       	ldi	r24, 0x01	; 1
     5b4:	a5 dd       	rcall	.-1206   	; 0x100 <LCD_Cursor>
	LCD_WriteData(ah1 + '0');
     5b6:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <ah1>
     5ba:	80 5d       	subi	r24, 0xD0	; 208
	LCD_Cursor(2);
     5bc:	b8 dd       	rcall	.-1168   	; 0x12e <LCD_WriteData>
     5be:	82 e0       	ldi	r24, 0x02	; 2
	LCD_WriteData(ah0 + '0');
     5c0:	9f dd       	rcall	.-1218   	; 0x100 <LCD_Cursor>
     5c2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <ah0>
	LCD_Cursor(3);
     5c6:	80 5d       	subi	r24, 0xD0	; 208
	LCD_WriteData(58);
     5c8:	b2 dd       	rcall	.-1180   	; 0x12e <LCD_WriteData>
     5ca:	83 e0       	ldi	r24, 0x03	; 3
	LCD_Cursor(4);
     5cc:	99 dd       	rcall	.-1230   	; 0x100 <LCD_Cursor>
     5ce:	8a e3       	ldi	r24, 0x3A	; 58
	LCD_WriteData(am1 + '0');
     5d0:	ae dd       	rcall	.-1188   	; 0x12e <LCD_WriteData>
     5d2:	84 e0       	ldi	r24, 0x04	; 4
     5d4:	95 dd       	rcall	.-1238   	; 0x100 <LCD_Cursor>
	LCD_Cursor(5);
     5d6:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <am1>
	LCD_WriteData(am0 + '0');
     5da:	80 5d       	subi	r24, 0xD0	; 208
     5dc:	a8 dd       	rcall	.-1200   	; 0x12e <LCD_WriteData>
	LCD_Cursor(6);
     5de:	85 e0       	ldi	r24, 0x05	; 5
     5e0:	8f dd       	rcall	.-1250   	; 0x100 <LCD_Cursor>
	LCD_WriteData(58);
     5e2:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <am0>
	LCD_Cursor(7);
     5e6:	80 5d       	subi	r24, 0xD0	; 208
     5e8:	a2 dd       	rcall	.-1212   	; 0x12e <LCD_WriteData>
     5ea:	86 e0       	ldi	r24, 0x06	; 6
	LCD_WriteData(as1 + '0');
     5ec:	89 dd       	rcall	.-1262   	; 0x100 <LCD_Cursor>
     5ee:	8a e3       	ldi	r24, 0x3A	; 58
     5f0:	9e dd       	rcall	.-1220   	; 0x12e <LCD_WriteData>
	LCD_Cursor(8);
     5f2:	87 e0       	ldi	r24, 0x07	; 7
	LCD_WriteData(as0 + '0');
     5f4:	85 dd       	rcall	.-1270   	; 0x100 <LCD_Cursor>
     5f6:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <as1>
	if(atf){
		LCD_Cursor(9);
     5fa:	80 5d       	subi	r24, 0xD0	; 208
		LCD_WriteData(97);
     5fc:	98 dd       	rcall	.-1232   	; 0x12e <LCD_WriteData>
		LCD_Cursor(10);
     5fe:	88 e0       	ldi	r24, 0x08	; 8
		LCD_WriteData(109);
     600:	7f dd       	rcall	.-1282   	; 0x100 <LCD_Cursor>
     602:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <as0>
	}
	else{
		LCD_Cursor(9);
		LCD_WriteData(112);
     606:	80 5d       	subi	r24, 0xD0	; 208
		LCD_Cursor(10);
     608:	92 dd       	rcall	.-1244   	; 0x12e <LCD_WriteData>
     60a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <atf>
		LCD_WriteData(109);
     60e:	88 23       	and	r24, r24
	}
	LCD_Cursor(17);
     610:	49 f0       	breq	.+18     	; 0x624 <ALARM_FSM+0x7a>
     612:	89 e0       	ldi	r24, 0x09	; 9
     614:	75 dd       	rcall	.-1302   	; 0x100 <LCD_Cursor>
	LCD_WriteData(83);
     616:	81 e6       	ldi	r24, 0x61	; 97
     618:	8a dd       	rcall	.-1260   	; 0x12e <LCD_WriteData>
     61a:	8a e0       	ldi	r24, 0x0A	; 10
	LCD_WriteData(69);
     61c:	71 dd       	rcall	.-1310   	; 0x100 <LCD_Cursor>
     61e:	8d e6       	ldi	r24, 0x6D	; 109
     620:	86 dd       	rcall	.-1268   	; 0x12e <LCD_WriteData>
	LCD_WriteData(84);
     622:	08 c0       	rjmp	.+16     	; 0x634 <ALARM_FSM+0x8a>
     624:	89 e0       	ldi	r24, 0x09	; 9
     626:	6c dd       	rcall	.-1320   	; 0x100 <LCD_Cursor>
	LCD_WriteData(32);
     628:	80 e7       	ldi	r24, 0x70	; 112
     62a:	81 dd       	rcall	.-1278   	; 0x12e <LCD_WriteData>
     62c:	8a e0       	ldi	r24, 0x0A	; 10
	LCD_WriteData(65);
     62e:	68 dd       	rcall	.-1328   	; 0x100 <LCD_Cursor>
     630:	8d e6       	ldi	r24, 0x6D	; 109
     632:	7d dd       	rcall	.-1286   	; 0x12e <LCD_WriteData>
	LCD_WriteData(76);
     634:	81 e1       	ldi	r24, 0x11	; 17
     636:	64 dd       	rcall	.-1336   	; 0x100 <LCD_Cursor>
     638:	83 e5       	ldi	r24, 0x53	; 83
	LCD_WriteData(65);
     63a:	79 dd       	rcall	.-1294   	; 0x12e <LCD_WriteData>
     63c:	85 e4       	ldi	r24, 0x45	; 69
     63e:	77 dd       	rcall	.-1298   	; 0x12e <LCD_WriteData>
	LCD_WriteData(82);
     640:	84 e5       	ldi	r24, 0x54	; 84
     642:	75 dd       	rcall	.-1302   	; 0x12e <LCD_WriteData>
     644:	80 e2       	ldi	r24, 0x20	; 32
	LCD_WriteData(77);
     646:	73 dd       	rcall	.-1306   	; 0x12e <LCD_WriteData>
     648:	81 e4       	ldi	r24, 0x41	; 65
     64a:	71 dd       	rcall	.-1310   	; 0x12e <LCD_WriteData>
	LCD_Cursor(counter);
     64c:	8c e4       	ldi	r24, 0x4C	; 76
     64e:	6f dd       	rcall	.-1314   	; 0x12e <LCD_WriteData>
     650:	81 e4       	ldi	r24, 0x41	; 65
     652:	6d dd       	rcall	.-1318   	; 0x12e <LCD_WriteData>
	if(tmpA == 0x01){
     654:	82 e5       	ldi	r24, 0x52	; 82
     656:	6b dd       	rcall	.-1322   	; 0x12e <LCD_WriteData>
     658:	8d e4       	ldi	r24, 0x4D	; 77
     65a:	69 dd       	rcall	.-1326   	; 0x12e <LCD_WriteData>
     65c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
		if (counter == 9)
     660:	4f dd       	rcall	.-1378   	; 0x100 <LCD_Cursor>
     662:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <tmpA>
			atf = !atf;
     666:	81 30       	cpi	r24, 0x01	; 1
     668:	09 f0       	breq	.+2      	; 0x66c <ALARM_FSM+0xc2>
     66a:	60 c0       	rjmp	.+192    	; 0x72c <ALARM_FSM+0x182>
     66c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     670:	89 30       	cpi	r24, 0x09	; 9
     672:	39 f4       	brne	.+14     	; 0x682 <ALARM_FSM+0xd8>
		else if (counter == 8){
     674:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <atf>
			as0++;
     678:	81 e0       	ldi	r24, 0x01	; 1
     67a:	89 27       	eor	r24, r25
     67c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <atf>
			if(as0 > 9)
     680:	08 95       	ret
     682:	88 30       	cpi	r24, 0x08	; 8
			as0 = 0;
     684:	49 f4       	brne	.+18     	; 0x698 <ALARM_FSM+0xee>
     686:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <as0>
		}
		else if (counter == 7){
     68a:	8f 5f       	subi	r24, 0xFF	; 255
     68c:	8a 30       	cpi	r24, 0x0A	; 10
			as1++;
     68e:	08 f4       	brcc	.+2      	; 0x692 <ALARM_FSM+0xe8>
     690:	65 c0       	rjmp	.+202    	; 0x75c <ALARM_FSM+0x1b2>
     692:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <as0>
			if(as1 > 5)
     696:	08 95       	ret
			as0++;
			if(as0 > 9)
			as0 = 0;
		}
		else if (counter == 7){
			as1++;
     698:	87 30       	cpi	r24, 0x07	; 7
     69a:	59 f4       	brne	.+22     	; 0x6b2 <ALARM_FSM+0x108>
     69c:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <as1>
			if(as1 > 5)
			as1 = 0;
     6a0:	8f 5f       	subi	r24, 0xFF	; 255
     6a2:	86 30       	cpi	r24, 0x06	; 6
		}
		else if (counter == 5){
     6a4:	18 f4       	brcc	.+6      	; 0x6ac <ALARM_FSM+0x102>
     6a6:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <as1>
			am0++;
     6aa:	08 95       	ret
     6ac:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <as1>
			if(am0 > 9)
     6b0:	08 95       	ret
			as1++;
			if(as1 > 5)
			as1 = 0;
		}
		else if (counter == 5){
			am0++;
     6b2:	85 30       	cpi	r24, 0x05	; 5
     6b4:	59 f4       	brne	.+22     	; 0x6cc <ALARM_FSM+0x122>
     6b6:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <am0>
			if(am0 > 9)
			am0 = 0;
     6ba:	8f 5f       	subi	r24, 0xFF	; 255
     6bc:	8a 30       	cpi	r24, 0x0A	; 10
		}
		else if (counter == 4){
     6be:	18 f4       	brcc	.+6      	; 0x6c6 <ALARM_FSM+0x11c>
     6c0:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <am0>
			am1++;
     6c4:	08 95       	ret
     6c6:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <am0>
			if(am1 > 5)
     6ca:	08 95       	ret
			am0++;
			if(am0 > 9)
			am0 = 0;
		}
		else if (counter == 4){
			am1++;
     6cc:	84 30       	cpi	r24, 0x04	; 4
     6ce:	59 f4       	brne	.+22     	; 0x6e6 <ALARM_FSM+0x13c>
     6d0:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <am1>
			if(am1 > 5)
			am1 = 0;
     6d4:	8f 5f       	subi	r24, 0xFF	; 255
     6d6:	86 30       	cpi	r24, 0x06	; 6
		}
		else if (counter == 2){
     6d8:	18 f4       	brcc	.+6      	; 0x6e0 <ALARM_FSM+0x136>
     6da:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <am1>
			ah0++;
     6de:	08 95       	ret
     6e0:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <am1>
     6e4:	08 95       	ret
			if(ah0 > 2)
     6e6:	82 30       	cpi	r24, 0x02	; 2
     6e8:	71 f4       	brne	.+28     	; 0x706 <ALARM_FSM+0x15c>
			ah1 = 0;
     6ea:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <ah0>
			if(ah0 > 9)
     6ee:	8f 5f       	subi	r24, 0xFF	; 255
     6f0:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <ah0>
			ah0 = 0;
     6f4:	83 30       	cpi	r24, 0x03	; 3
     6f6:	10 f0       	brcs	.+4      	; 0x6fc <ALARM_FSM+0x152>
		}
		else if (counter == 1){
     6f8:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <ah1>
			ah1++;
     6fc:	8a 30       	cpi	r24, 0x0A	; 10
     6fe:	80 f1       	brcs	.+96     	; 0x760 <ALARM_FSM+0x1b6>
     700:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <ah0>
			if(ah1 > 1)
     704:	08 95       	ret
			ah1 = 0;
			if(ah0 > 9)
			ah0 = 0;
		}
		else if (counter == 1){
			ah1++;
     706:	81 30       	cpi	r24, 0x01	; 1
     708:	c1 f4       	brne	.+48     	; 0x73a <ALARM_FSM+0x190>
     70a:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <ah1>
			if(ah1 > 1)
				ah1 = 0;
     70e:	8f 5f       	subi	r24, 0xFF	; 255
			if(ah0 > 2)
     710:	82 30       	cpi	r24, 0x02	; 2
     712:	18 f4       	brcc	.+6      	; 0x71a <ALARM_FSM+0x170>
     714:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <ah1>
				ah0 = 0;
     718:	02 c0       	rjmp	.+4      	; 0x71e <ALARM_FSM+0x174>
     71a:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <ah1>
		}
	}
	else if(tmpA == 0x02){
     71e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <ah0>
		counter--;
     722:	83 30       	cpi	r24, 0x03	; 3
     724:	e8 f0       	brcs	.+58     	; 0x760 <ALARM_FSM+0x1b6>
     726:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <ah0>
     72a:	08 95       	ret
	}
	if(counter == 3 || counter == 6)
     72c:	82 30       	cpi	r24, 0x02	; 2
     72e:	29 f4       	brne	.+10     	; 0x73a <ALARM_FSM+0x190>
     730:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     734:	81 50       	subi	r24, 0x01	; 1
     736:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		counter--;
     73a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
	if(counter < 1)
     73e:	83 30       	cpi	r24, 0x03	; 3
     740:	11 f0       	breq	.+4      	; 0x746 <ALARM_FSM+0x19c>
     742:	86 30       	cpi	r24, 0x06	; 6
     744:	19 f4       	brne	.+6      	; 0x74c <ALARM_FSM+0x1a2>
		counter = 9;
     746:	81 50       	subi	r24, 0x01	; 1
     748:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     74c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
	LCD_Cursor(counter);
	if(tmpA == 0x01){
		if (counter == 9)
			atf = !atf;
		else if (counter == 8){
			as0++;
     750:	81 11       	cpse	r24, r1
     752:	06 c0       	rjmp	.+12     	; 0x760 <ALARM_FSM+0x1b6>
     754:	89 e0       	ldi	r24, 0x09	; 9
     756:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     75a:	08 95       	ret
     75c:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <as0>
     760:	08 95       	ret

00000762 <CHECK_FSM>:
		counter--;
	if(counter < 1)
		counter = 9;
}
void CHECK_FSM(){
	if(alarmEN == false)
     762:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <alarmEN>
     766:	88 23       	and	r24, r24
     768:	09 f4       	brne	.+2      	; 0x76c <CHECK_FSM+0xa>
     76a:	2e c1       	rjmp	.+604    	; 0x9c8 <CHECK_FSM+0x266>
		return;
	if(contTIME == false && contALARM == false){
     76c:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <contTIME>
     770:	81 11       	cpse	r24, r1
     772:	1c c0       	rjmp	.+56     	; 0x7ac <CHECK_FSM+0x4a>
     774:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <contALARM>
     778:	81 11       	cpse	r24, r1
     77a:	18 c0       	rjmp	.+48     	; 0x7ac <CHECK_FSM+0x4a>
		LCD_Cursor(17);
     77c:	81 e1       	ldi	r24, 0x11	; 17
		LCD_WriteData(65);
     77e:	c0 dc       	rcall	.-1664   	; 0x100 <LCD_Cursor>
		LCD_WriteData(76);
     780:	81 e4       	ldi	r24, 0x41	; 65
		LCD_WriteData(65);
     782:	d5 dc       	rcall	.-1622   	; 0x12e <LCD_WriteData>
		LCD_WriteData(82);
     784:	8c e4       	ldi	r24, 0x4C	; 76
		LCD_WriteData(77);
     786:	d3 dc       	rcall	.-1626   	; 0x12e <LCD_WriteData>
		LCD_WriteData(32);
     788:	81 e4       	ldi	r24, 0x41	; 65
		LCD_WriteData(79);
     78a:	d1 dc       	rcall	.-1630   	; 0x12e <LCD_WriteData>
		LCD_WriteData(78);
     78c:	82 e5       	ldi	r24, 0x52	; 82
     78e:	cf dc       	rcall	.-1634   	; 0x12e <LCD_WriteData>
     790:	8d e4       	ldi	r24, 0x4D	; 77
		LCD_WriteData(32);
     792:	cd dc       	rcall	.-1638   	; 0x12e <LCD_WriteData>
     794:	80 e2       	ldi	r24, 0x20	; 32
     796:	cb dc       	rcall	.-1642   	; 0x12e <LCD_WriteData>
		LCD_WriteData(32);
     798:	8f e4       	ldi	r24, 0x4F	; 79
     79a:	c9 dc       	rcall	.-1646   	; 0x12e <LCD_WriteData>
     79c:	8e e4       	ldi	r24, 0x4E	; 78
		LCD_Cursor(0);
     79e:	c7 dc       	rcall	.-1650   	; 0x12e <LCD_WriteData>
     7a0:	80 e2       	ldi	r24, 0x20	; 32
     7a2:	c5 dc       	rcall	.-1654   	; 0x12e <LCD_WriteData>
	}
	if(h1 == ah1 && h0 == ah0 && m1 == am1 && m0 == am0 && s1 == as1 && s0 == as0 && tf == atf){
     7a4:	80 e2       	ldi	r24, 0x20	; 32
     7a6:	c3 dc       	rcall	.-1658   	; 0x12e <LCD_WriteData>
     7a8:	80 e0       	ldi	r24, 0x00	; 0
     7aa:	aa dc       	rcall	.-1708   	; 0x100 <LCD_Cursor>
     7ac:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <h1>
     7b0:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <ah1>
     7b4:	98 13       	cpse	r25, r24
     7b6:	35 c0       	rjmp	.+106    	; 0x822 <CHECK_FSM+0xc0>
     7b8:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <h0>
     7bc:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <ah0>
     7c0:	98 13       	cpse	r25, r24
     7c2:	2f c0       	rjmp	.+94     	; 0x822 <CHECK_FSM+0xc0>
     7c4:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <m1>
     7c8:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <am1>
     7cc:	98 13       	cpse	r25, r24
     7ce:	29 c0       	rjmp	.+82     	; 0x822 <CHECK_FSM+0xc0>
     7d0:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <m0>
     7d4:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <am0>
     7d8:	98 13       	cpse	r25, r24
     7da:	23 c0       	rjmp	.+70     	; 0x822 <CHECK_FSM+0xc0>
     7dc:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <s1>
     7e0:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <as1>
     7e4:	98 13       	cpse	r25, r24
     7e6:	1d c0       	rjmp	.+58     	; 0x822 <CHECK_FSM+0xc0>
     7e8:	90 91 22 01 	lds	r25, 0x0122	; 0x800122 <s0>
     7ec:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <as0>
     7f0:	98 13       	cpse	r25, r24
     7f2:	17 c0       	rjmp	.+46     	; 0x822 <CHECK_FSM+0xc0>
     7f4:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <tf>
		alarm = true;
     7f8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <atf>
     7fc:	98 13       	cpse	r25, r24
	}
	if(timer < 120 && alarm == true){
     7fe:	11 c0       	rjmp	.+34     	; 0x822 <CHECK_FSM+0xc0>
     800:	81 e0       	ldi	r24, 0x01	; 1
     802:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <alarm>
     806:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <timer>
     80a:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <timer+0x1>
     80e:	a0 91 1c 01 	lds	r26, 0x011C	; 0x80011c <timer+0x2>
     812:	b0 91 1d 01 	lds	r27, 0x011D	; 0x80011d <timer+0x3>
     816:	88 37       	cpi	r24, 0x78	; 120
     818:	91 05       	cpc	r25, r1
     81a:	a1 05       	cpc	r26, r1
     81c:	b1 05       	cpc	r27, r1
     81e:	a0 f0       	brcs	.+40     	; 0x848 <CHECK_FSM+0xe6>
     820:	71 c0       	rjmp	.+226    	; 0x904 <CHECK_FSM+0x1a2>
     822:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <timer>
     826:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <timer+0x1>
     82a:	a0 91 1c 01 	lds	r26, 0x011C	; 0x80011c <timer+0x2>
     82e:	b0 91 1d 01 	lds	r27, 0x011D	; 0x80011d <timer+0x3>
     832:	88 37       	cpi	r24, 0x78	; 120
     834:	91 05       	cpc	r25, r1
     836:	a1 05       	cpc	r26, r1
     838:	b1 05       	cpc	r27, r1
     83a:	08 f0       	brcs	.+2      	; 0x83e <CHECK_FSM+0xdc>
		if(timer % 2 == 0)
     83c:	63 c0       	rjmp	.+198    	; 0x904 <CHECK_FSM+0x1a2>
     83e:	20 91 19 01 	lds	r18, 0x0119	; 0x800119 <alarm>
			set_PWM(523.25);
     842:	22 23       	and	r18, r18
     844:	09 f4       	brne	.+2      	; 0x848 <CHECK_FSM+0xe6>
     846:	5e c0       	rjmp	.+188    	; 0x904 <CHECK_FSM+0x1a2>
     848:	80 fd       	sbrc	r24, 0
     84a:	06 c0       	rjmp	.+12     	; 0x858 <CHECK_FSM+0xf6>
		else
			set_PWM(0);
     84c:	60 e0       	ldi	r22, 0x00	; 0
     84e:	70 ed       	ldi	r23, 0xD0	; 208
		noDisplay = true;
     850:	82 e0       	ldi	r24, 0x02	; 2
		if(flash){
     852:	94 e4       	ldi	r25, 0x44	; 68
     854:	e6 dc       	rcall	.-1588   	; 0x222 <set_PWM>
			LCD_Cursor(1);
     856:	04 c0       	rjmp	.+8      	; 0x860 <CHECK_FSM+0xfe>
			LCD_WriteData(87);
     858:	60 e0       	ldi	r22, 0x00	; 0
			LCD_WriteData(65);
     85a:	70 e0       	ldi	r23, 0x00	; 0
			LCD_WriteData(75);
     85c:	cb 01       	movw	r24, r22
			LCD_WriteData(69);
     85e:	e1 dc       	rcall	.-1598   	; 0x222 <set_PWM>
			LCD_WriteData(32);
     860:	81 e0       	ldi	r24, 0x01	; 1
			LCD_WriteData(85);
     862:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <noDisplay>
			LCD_WriteData(80);
			LCD_WriteData(33);
     866:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <flash>
			LCD_WriteData(33);
			LCD_WriteData(33);
     86a:	88 23       	and	r24, r24
			LCD_Cursor(0);
     86c:	c9 f0       	breq	.+50     	; 0x8a0 <CHECK_FSM+0x13e>
     86e:	81 e0       	ldi	r24, 0x01	; 1
     870:	47 dc       	rcall	.-1906   	; 0x100 <LCD_Cursor>
		}
		else{
			LCD_Cursor(1);
     872:	87 e5       	ldi	r24, 0x57	; 87
     874:	5c dc       	rcall	.-1864   	; 0x12e <LCD_WriteData>
     876:	81 e4       	ldi	r24, 0x41	; 65
			LCD_WriteData(32);
     878:	5a dc       	rcall	.-1868   	; 0x12e <LCD_WriteData>
     87a:	8b e4       	ldi	r24, 0x4B	; 75
     87c:	58 dc       	rcall	.-1872   	; 0x12e <LCD_WriteData>
			LCD_WriteData(32);
     87e:	85 e4       	ldi	r24, 0x45	; 69
     880:	56 dc       	rcall	.-1876   	; 0x12e <LCD_WriteData>
     882:	80 e2       	ldi	r24, 0x20	; 32
			LCD_WriteData(32);
     884:	54 dc       	rcall	.-1880   	; 0x12e <LCD_WriteData>
     886:	85 e5       	ldi	r24, 0x55	; 85
     888:	52 dc       	rcall	.-1884   	; 0x12e <LCD_WriteData>
			LCD_WriteData(32);
     88a:	80 e5       	ldi	r24, 0x50	; 80
     88c:	50 dc       	rcall	.-1888   	; 0x12e <LCD_WriteData>
     88e:	81 e2       	ldi	r24, 0x21	; 33
			LCD_WriteData(32);
     890:	4e dc       	rcall	.-1892   	; 0x12e <LCD_WriteData>
     892:	81 e2       	ldi	r24, 0x21	; 33
     894:	4c dc       	rcall	.-1896   	; 0x12e <LCD_WriteData>
			LCD_WriteData(32);
     896:	81 e2       	ldi	r24, 0x21	; 33
     898:	4a dc       	rcall	.-1900   	; 0x12e <LCD_WriteData>
     89a:	80 e0       	ldi	r24, 0x00	; 0
			LCD_WriteData(32);
     89c:	31 dc       	rcall	.-1950   	; 0x100 <LCD_Cursor>
     89e:	18 c0       	rjmp	.+48     	; 0x8d0 <CHECK_FSM+0x16e>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
			LCD_WriteData(32);
     8a2:	2e dc       	rcall	.-1956   	; 0x100 <LCD_Cursor>
     8a4:	80 e2       	ldi	r24, 0x20	; 32
     8a6:	43 dc       	rcall	.-1914   	; 0x12e <LCD_WriteData>
			LCD_WriteData(32);
     8a8:	80 e2       	ldi	r24, 0x20	; 32
     8aa:	41 dc       	rcall	.-1918   	; 0x12e <LCD_WriteData>
     8ac:	80 e2       	ldi	r24, 0x20	; 32
			LCD_WriteData(32);
     8ae:	3f dc       	rcall	.-1922   	; 0x12e <LCD_WriteData>
     8b0:	80 e2       	ldi	r24, 0x20	; 32
     8b2:	3d dc       	rcall	.-1926   	; 0x12e <LCD_WriteData>
			LCD_Cursor(0);
     8b4:	80 e2       	ldi	r24, 0x20	; 32
     8b6:	3b dc       	rcall	.-1930   	; 0x12e <LCD_WriteData>
		}
		flash = !flash;
     8b8:	80 e2       	ldi	r24, 0x20	; 32
     8ba:	39 dc       	rcall	.-1934   	; 0x12e <LCD_WriteData>
     8bc:	80 e2       	ldi	r24, 0x20	; 32
     8be:	37 dc       	rcall	.-1938   	; 0x12e <LCD_WriteData>
     8c0:	80 e2       	ldi	r24, 0x20	; 32
     8c2:	35 dc       	rcall	.-1942   	; 0x12e <LCD_WriteData>
		timer++;
     8c4:	80 e2       	ldi	r24, 0x20	; 32
     8c6:	33 dc       	rcall	.-1946   	; 0x12e <LCD_WriteData>
     8c8:	80 e2       	ldi	r24, 0x20	; 32
     8ca:	31 dc       	rcall	.-1950   	; 0x12e <LCD_WriteData>
     8cc:	80 e0       	ldi	r24, 0x00	; 0
     8ce:	18 dc       	rcall	.-2000   	; 0x100 <LCD_Cursor>
     8d0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <flash>
     8d4:	81 e0       	ldi	r24, 0x01	; 1
     8d6:	89 27       	eor	r24, r25
     8d8:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <flash>
     8dc:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <timer>
     8e0:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <timer+0x1>
     8e4:	a0 91 1c 01 	lds	r26, 0x011C	; 0x80011c <timer+0x2>
     8e8:	b0 91 1d 01 	lds	r27, 0x011D	; 0x80011d <timer+0x3>
	}
	else if (!snooze){
     8ec:	01 96       	adiw	r24, 0x01	; 1
     8ee:	a1 1d       	adc	r26, r1
     8f0:	b1 1d       	adc	r27, r1
     8f2:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <timer>
		noDisplay = false;
		alarm = false;
     8f6:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <timer+0x1>
		set_PWM(0);
     8fa:	a0 93 1c 01 	sts	0x011C, r26	; 0x80011c <timer+0x2>
     8fe:	b0 93 1d 01 	sts	0x011D, r27	; 0x80011d <timer+0x3>
		timer = 0;
     902:	14 c0       	rjmp	.+40     	; 0x92c <CHECK_FSM+0x1ca>
     904:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <snooze>
     908:	81 11       	cpse	r24, r1
     90a:	55 c0       	rjmp	.+170    	; 0x9b6 <CHECK_FSM+0x254>
     90c:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <noDisplay>
     910:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <alarm>
	}
	if(tmpA > 0 && alarm == true){
     914:	60 e0       	ldi	r22, 0x00	; 0
     916:	70 e0       	ldi	r23, 0x00	; 0
     918:	cb 01       	movw	r24, r22
     91a:	83 dc       	rcall	.-1786   	; 0x222 <set_PWM>
     91c:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <timer>
     920:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <timer+0x1>
		noDisplay = false;
     924:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <timer+0x2>
		snooze = true;
     928:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <timer+0x3>
		timer = 0;
     92c:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <tmpA>
     930:	88 23       	and	r24, r24
     932:	a9 f0       	breq	.+42     	; 0x95e <CHECK_FSM+0x1fc>
     934:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <alarm>
     938:	88 23       	and	r24, r24
     93a:	89 f0       	breq	.+34     	; 0x95e <CHECK_FSM+0x1fc>
		set_PWM(0);
     93c:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <noDisplay>
     940:	81 e0       	ldi	r24, 0x01	; 1
     942:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <snooze>
	}
	if(snooze){
     946:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <timer>
     94a:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <timer+0x1>
		timer++;
     94e:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <timer+0x2>
     952:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <timer+0x3>
     956:	60 e0       	ldi	r22, 0x00	; 0
     958:	70 e0       	ldi	r23, 0x00	; 0
     95a:	cb 01       	movw	r24, r22
     95c:	62 dc       	rcall	.-1852   	; 0x222 <set_PWM>
     95e:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <snooze>
     962:	88 23       	and	r24, r24
     964:	89 f1       	breq	.+98     	; 0x9c8 <CHECK_FSM+0x266>
     966:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <timer>
     96a:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <timer+0x1>
     96e:	a0 91 1c 01 	lds	r26, 0x011C	; 0x80011c <timer+0x2>
     972:	b0 91 1d 01 	lds	r27, 0x011D	; 0x80011d <timer+0x3>
		if(timer < 60){
     976:	01 96       	adiw	r24, 0x01	; 1
     978:	a1 1d       	adc	r26, r1
     97a:	b1 1d       	adc	r27, r1
			alarm = false;
     97c:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <timer>
     980:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <timer+0x1>
		}
		else{
			alarm = true;
     984:	a0 93 1c 01 	sts	0x011C, r26	; 0x80011c <timer+0x2>
			snooze = false;
     988:	b0 93 1d 01 	sts	0x011D, r27	; 0x80011d <timer+0x3>
			timer = 0;
     98c:	cc 97       	sbiw	r24, 0x3c	; 60
     98e:	a1 05       	cpc	r26, r1
     990:	b1 05       	cpc	r27, r1
     992:	18 f4       	brcc	.+6      	; 0x99a <CHECK_FSM+0x238>
     994:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <alarm>
     998:	08 95       	ret
     99a:	81 e0       	ldi	r24, 0x01	; 1
     99c:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <alarm>
		noDisplay = false;
		alarm = false;
		set_PWM(0);
		timer = 0;
	}
	if(tmpA > 0 && alarm == true){
     9a0:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <snooze>
     9a4:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <timer>
     9a8:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <timer+0x1>
     9ac:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <timer+0x2>
     9b0:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <timer+0x3>
     9b4:	08 95       	ret
     9b6:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <tmpA>
     9ba:	88 23       	and	r24, r24
     9bc:	a1 f2       	breq	.-88     	; 0x966 <CHECK_FSM+0x204>
     9be:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <alarm>
     9c2:	88 23       	and	r24, r24
     9c4:	81 f2       	breq	.-96     	; 0x966 <CHECK_FSM+0x204>
     9c6:	ba cf       	rjmp	.-140    	; 0x93c <CHECK_FSM+0x1da>
     9c8:	08 95       	ret

000009ca <main>:
			snooze = false;
			timer = 0;
		}
	}
}
int main(void) {
     9ca:	cf 93       	push	r28
     9cc:	df 93       	push	r29
     9ce:	cd b7       	in	r28, 0x3d	; 61
     9d0:	de b7       	in	r29, 0x3e	; 62
     9d2:	28 97       	sbiw	r28, 0x08	; 8
     9d4:	0f b6       	in	r0, 0x3f	; 63
     9d6:	f8 94       	cli
     9d8:	de bf       	out	0x3e, r29	; 62
     9da:	0f be       	out	0x3f, r0	; 63
     9dc:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0x00; PORTA = 0xFF;
     9de:	11 b8       	out	0x01, r1	; 1
     9e0:	8f ef       	ldi	r24, 0xFF	; 255
     9e2:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00;
     9e4:	84 b9       	out	0x04, r24	; 4
     9e6:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; PORTC = 0x00;
     9e8:	87 b9       	out	0x07, r24	; 7
     9ea:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00;
     9ec:	8a b9       	out	0x0a, r24	; 10
	unsigned long TimeElapsed = 0;
	unsigned long SetTimeElapsed = 0;
	unsigned long SetAlarmElapsed = 0;
	unsigned long CheckAlarmElapsed = 0;
	PWM_on();
	LCD_init();
     9ee:	1b b8       	out	0x0b, r1	; 11
     9f0:	83 dc       	rcall	.-1786   	; 0x2f8 <PWM_on>
	TimerSet(1);
     9f2:	8e db       	rcall	.-2276   	; 0x110 <LCD_init>
     9f4:	61 e0       	ldi	r22, 0x01	; 1
     9f6:	70 e0       	ldi	r23, 0x00	; 0
     9f8:	80 e0       	ldi	r24, 0x00	; 0
	TimerOn();
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	01 dc       	rcall	.-2046   	; 0x200 <TimerSet>
	while(1) {
		tmpA = ~PINA;
     9fe:	a0 db       	rcall	.-2240   	; 0x140 <TimerOn>
     a00:	80 b1       	in	r24, 0x00	; 0
     a02:	80 95       	com	r24
     a04:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <tmpA>
	DDRD = 0xFF; PORTD = 0x00;
	unsigned long ClockTimeElapsed = 0;
	unsigned long TimeElapsed = 0;
	unsigned long SetTimeElapsed = 0;
	unsigned long SetAlarmElapsed = 0;
	unsigned long CheckAlarmElapsed = 0;
     a08:	c1 2c       	mov	r12, r1
     a0a:	d1 2c       	mov	r13, r1
	DDRC = 0xFF; PORTC = 0x00;
	DDRD = 0xFF; PORTD = 0x00;
	unsigned long ClockTimeElapsed = 0;
	unsigned long TimeElapsed = 0;
	unsigned long SetTimeElapsed = 0;
	unsigned long SetAlarmElapsed = 0;
     a0c:	76 01       	movw	r14, r12
     a0e:	41 2c       	mov	r4, r1
     a10:	51 2c       	mov	r5, r1
	DDRB = 0xFF; PORTB = 0x00;
	DDRC = 0xFF; PORTC = 0x00;
	DDRD = 0xFF; PORTD = 0x00;
	unsigned long ClockTimeElapsed = 0;
	unsigned long TimeElapsed = 0;
	unsigned long SetTimeElapsed = 0;
     a12:	32 01       	movw	r6, r4
     a14:	81 2c       	mov	r8, r1
     a16:	91 2c       	mov	r9, r1
	DDRA = 0x00; PORTA = 0xFF;
	DDRB = 0xFF; PORTB = 0x00;
	DDRC = 0xFF; PORTC = 0x00;
	DDRD = 0xFF; PORTD = 0x00;
	unsigned long ClockTimeElapsed = 0;
	unsigned long TimeElapsed = 0;
     a18:	54 01       	movw	r10, r8
     a1a:	19 82       	std	Y+1, r1	; 0x01
     a1c:	1a 82       	std	Y+2, r1	; 0x02
     a1e:	1b 82       	std	Y+3, r1	; 0x03
int main(void) {
	DDRA = 0x00; PORTA = 0xFF;
	DDRB = 0xFF; PORTB = 0x00;
	DDRC = 0xFF; PORTC = 0x00;
	DDRD = 0xFF; PORTD = 0x00;
	unsigned long ClockTimeElapsed = 0;
     a20:	1c 82       	std	Y+4, r1	; 0x04
     a22:	1d 82       	std	Y+5, r1	; 0x05
     a24:	1e 82       	std	Y+6, r1	; 0x06
     a26:	1f 82       	std	Y+7, r1	; 0x07
	TimerSet(1);
	TimerOn();
	while(1) {
		tmpA = ~PINA;
		if(TimeElapsed >= 1000){
			TIME_FSM();
     a28:	18 86       	std	Y+8, r1	; 0x08
     a2a:	13 c0       	rjmp	.+38     	; 0xa52 <main+0x88>
			TimeElapsed = 0;
     a2c:	bc dc       	rcall	.-1672   	; 0x3a6 <TIME_FSM>
     a2e:	19 82       	std	Y+1, r1	; 0x01
     a30:	1a 82       	std	Y+2, r1	; 0x02
     a32:	1b 82       	std	Y+3, r1	; 0x03
		}
		if(ClockTimeElapsed >= 250){
     a34:	1c 82       	std	Y+4, r1	; 0x04
     a36:	8d 81       	ldd	r24, Y+5	; 0x05
     a38:	9e 81       	ldd	r25, Y+6	; 0x06
     a3a:	af 81       	ldd	r26, Y+7	; 0x07
     a3c:	b8 85       	ldd	r27, Y+8	; 0x08
     a3e:	8a 3f       	cpi	r24, 0xFA	; 250
     a40:	91 05       	cpc	r25, r1
     a42:	a1 05       	cpc	r26, r1
			CLOCK_FSM();
     a44:	b1 05       	cpc	r27, r1
     a46:	28 f0       	brcs	.+10     	; 0xa52 <main+0x88>
			ClockTimeElapsed = 0;
     a48:	62 dc       	rcall	.-1852   	; 0x30e <CLOCK_FSM>
     a4a:	1d 82       	std	Y+5, r1	; 0x05
     a4c:	1e 82       	std	Y+6, r1	; 0x06
     a4e:	1f 82       	std	Y+7, r1	; 0x07
		}
		if(SetTimeElapsed >= 150){
     a50:	18 86       	std	Y+8, r1	; 0x08
     a52:	96 e9       	ldi	r25, 0x96	; 150
     a54:	89 16       	cp	r8, r25
     a56:	91 04       	cpc	r9, r1
     a58:	a1 04       	cpc	r10, r1
     a5a:	b1 04       	cpc	r11, r1
     a5c:	08 f4       	brcc	.+2      	; 0xa60 <main+0x96>
			if(tmpA == 0x04 && !contALARM)
     a5e:	53 c0       	rjmp	.+166    	; 0xb06 <main+0x13c>
     a60:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <tmpA>
     a64:	84 30       	cpi	r24, 0x04	; 4
     a66:	69 f4       	brne	.+26     	; 0xa82 <main+0xb8>
     a68:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <contALARM>
     a6c:	81 11       	cpse	r24, r1
				contTIME = !contTIME;
     a6e:	3e c1       	rjmp	.+636    	; 0xcec <main+0x322>
     a70:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <contTIME>
     a74:	a1 e0       	ldi	r26, 0x01	; 1
     a76:	8a 27       	eor	r24, r26
     a78:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <contTIME>
			if(contTIME && !contALARM)
     a7c:	81 11       	cpse	r24, r1
     a7e:	09 c0       	rjmp	.+18     	; 0xa92 <main+0xc8>
     a80:	0d c0       	rjmp	.+26     	; 0xa9c <main+0xd2>
     a82:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <contTIME>
     a86:	88 23       	and	r24, r24
     a88:	61 f0       	breq	.+24     	; 0xaa2 <main+0xd8>
     a8a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <contALARM>
				SET_FSM();
     a8e:	81 11       	cpse	r24, r1
     a90:	2b c0       	rjmp	.+86     	; 0xae8 <main+0x11e>
				LCD_WriteData(32);
				LCD_WriteData(32);
				LCD_WriteData(32);
				LCD_Cursor(0);
			}
			SetTimeElapsed = 0;
     a92:	f8 dc       	rcall	.-1552   	; 0x484 <SET_FSM>
     a94:	81 2c       	mov	r8, r1
     a96:	91 2c       	mov	r9, r1
		}
		if(SetTimeElapsed >= 150){
			if(tmpA == 0x04 && !contALARM)
				contTIME = !contTIME;
			if(contTIME && !contALARM)
				SET_FSM();
     a98:	54 01       	movw	r10, r8
			else if(!contTIME && contALARM == false && alarmEN == false){
     a9a:	35 c0       	rjmp	.+106    	; 0xb06 <main+0x13c>
     a9c:	81 11       	cpse	r24, r1
     a9e:	2b c1       	rjmp	.+598    	; 0xcf6 <main+0x32c>
     aa0:	04 c0       	rjmp	.+8      	; 0xaaa <main+0xe0>
     aa2:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <contALARM>
     aa6:	81 11       	cpse	r24, r1
     aa8:	23 c0       	rjmp	.+70     	; 0xaf0 <main+0x126>
     aaa:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <alarmEN>
				counter = 9;
				LCD_Cursor(17);
     aae:	81 11       	cpse	r24, r1
				LCD_WriteData(32);
     ab0:	23 c0       	rjmp	.+70     	; 0xaf8 <main+0x12e>
				LCD_WriteData(32);
     ab2:	b9 e0       	ldi	r27, 0x09	; 9
				LCD_WriteData(32);
     ab4:	b0 93 00 01 	sts	0x0100, r27	; 0x800100 <__data_start>
				LCD_WriteData(32);
     ab8:	81 e1       	ldi	r24, 0x11	; 17
				LCD_WriteData(32);
     aba:	22 db       	rcall	.-2492   	; 0x100 <LCD_Cursor>
     abc:	80 e2       	ldi	r24, 0x20	; 32
     abe:	37 db       	rcall	.-2450   	; 0x12e <LCD_WriteData>
				LCD_WriteData(32);
     ac0:	80 e2       	ldi	r24, 0x20	; 32
     ac2:	35 db       	rcall	.-2454   	; 0x12e <LCD_WriteData>
     ac4:	80 e2       	ldi	r24, 0x20	; 32
				LCD_WriteData(32);
     ac6:	33 db       	rcall	.-2458   	; 0x12e <LCD_WriteData>
     ac8:	80 e2       	ldi	r24, 0x20	; 32
     aca:	31 db       	rcall	.-2462   	; 0x12e <LCD_WriteData>
				LCD_WriteData(32);
     acc:	80 e2       	ldi	r24, 0x20	; 32
     ace:	2f db       	rcall	.-2466   	; 0x12e <LCD_WriteData>
     ad0:	80 e2       	ldi	r24, 0x20	; 32
				LCD_Cursor(0);
     ad2:	2d db       	rcall	.-2470   	; 0x12e <LCD_WriteData>
     ad4:	80 e2       	ldi	r24, 0x20	; 32
     ad6:	2b db       	rcall	.-2474   	; 0x12e <LCD_WriteData>
			}
			SetTimeElapsed = 0;
     ad8:	80 e2       	ldi	r24, 0x20	; 32
     ada:	29 db       	rcall	.-2478   	; 0x12e <LCD_WriteData>
     adc:	80 e0       	ldi	r24, 0x00	; 0
     ade:	10 db       	rcall	.-2528   	; 0x100 <LCD_Cursor>
     ae0:	81 2c       	mov	r8, r1
     ae2:	91 2c       	mov	r9, r1
     ae4:	54 01       	movw	r10, r8
     ae6:	0f c0       	rjmp	.+30     	; 0xb06 <main+0x13c>
     ae8:	81 2c       	mov	r8, r1
     aea:	91 2c       	mov	r9, r1
     aec:	54 01       	movw	r10, r8
     aee:	0b c0       	rjmp	.+22     	; 0xb06 <main+0x13c>
     af0:	81 2c       	mov	r8, r1
     af2:	91 2c       	mov	r9, r1
     af4:	54 01       	movw	r10, r8
     af6:	07 c0       	rjmp	.+14     	; 0xb06 <main+0x13c>
     af8:	81 2c       	mov	r8, r1
     afa:	91 2c       	mov	r9, r1
     afc:	54 01       	movw	r10, r8
		}
		if (SetAlarmElapsed >= 150)
     afe:	03 c0       	rjmp	.+6      	; 0xb06 <main+0x13c>
     b00:	81 2c       	mov	r8, r1
     b02:	91 2c       	mov	r9, r1
     b04:	54 01       	movw	r10, r8
     b06:	26 e9       	ldi	r18, 0x96	; 150
     b08:	42 16       	cp	r4, r18
     b0a:	51 04       	cpc	r5, r1
		{
			if(tmpA == 0x08 && !contTIME)
     b0c:	61 04       	cpc	r6, r1
     b0e:	71 04       	cpc	r7, r1
     b10:	08 f4       	brcc	.+2      	; 0xb14 <main+0x14a>
     b12:	5d c0       	rjmp	.+186    	; 0xbce <main+0x204>
     b14:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <tmpA>
     b18:	88 30       	cpi	r24, 0x08	; 8
     b1a:	81 f4       	brne	.+32     	; 0xb3c <main+0x172>
				contALARM = !contALARM;
     b1c:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <contTIME>
     b20:	81 11       	cpse	r24, r1
     b22:	f4 c0       	rjmp	.+488    	; 0xd0c <main+0x342>
     b24:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <contALARM>
			if(contALARM && !contTIME){
     b28:	91 e0       	ldi	r25, 0x01	; 1
				LCD_WriteData(32);
				LCD_WriteData(32);
				LCD_WriteData(32);
				LCD_Cursor(0);
			}
			SetTimeElapsed = 0;
     b2a:	89 27       	eor	r24, r25
     b2c:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <contALARM>
		}
		if (SetAlarmElapsed >= 150)
		{
			if(tmpA == 0x08 && !contTIME)
				contALARM = !contALARM;
			if(contALARM && !contTIME){
     b30:	81 11       	cpse	r24, r1
     b32:	0c c0       	rjmp	.+24     	; 0xb4c <main+0x182>
     b34:	13 c0       	rjmp	.+38     	; 0xb5c <main+0x192>
     b36:	81 2c       	mov	r8, r1
     b38:	91 2c       	mov	r9, r1
     b3a:	54 01       	movw	r10, r8
     b3c:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <contALARM>
				noDisplay = true;
     b40:	88 23       	and	r24, r24
     b42:	79 f0       	breq	.+30     	; 0xb62 <main+0x198>
     b44:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <contTIME>
				ALARM_FSM();
     b48:	81 11       	cpse	r24, r1
				LCD_WriteData(32);
				LCD_WriteData(32);
				LCD_WriteData(32);
				LCD_Cursor(0);
			}
			SetAlarmElapsed = 0;
     b4a:	32 c0       	rjmp	.+100    	; 0xbb0 <main+0x1e6>
     b4c:	a1 e0       	ldi	r26, 0x01	; 1
				contALARM = !contALARM;
			if(contALARM && !contTIME){
				noDisplay = true;
				ALARM_FSM();
			}
			else if(!contALARM && contTIME == false && alarmEN == false){
     b4e:	a0 93 13 01 	sts	0x0113, r26	; 0x800113 <noDisplay>
     b52:	2b dd       	rcall	.-1450   	; 0x5aa <ALARM_FSM>
				noDisplay = false;
				counter = 9;
     b54:	41 2c       	mov	r4, r1
				LCD_Cursor(17);
     b56:	51 2c       	mov	r5, r1
				LCD_WriteData(32);
     b58:	32 01       	movw	r6, r4
     b5a:	39 c0       	rjmp	.+114    	; 0xbce <main+0x204>
				LCD_WriteData(32);
     b5c:	81 11       	cpse	r24, r1
     b5e:	db c0       	rjmp	.+438    	; 0xd16 <main+0x34c>
     b60:	04 c0       	rjmp	.+8      	; 0xb6a <main+0x1a0>
				LCD_WriteData(32);
     b62:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <contTIME>
     b66:	81 11       	cpse	r24, r1
				LCD_WriteData(32);
     b68:	27 c0       	rjmp	.+78     	; 0xbb8 <main+0x1ee>
     b6a:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <alarmEN>
				LCD_WriteData(32);
     b6e:	81 11       	cpse	r24, r1
     b70:	27 c0       	rjmp	.+78     	; 0xbc0 <main+0x1f6>
     b72:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <noDisplay>
				LCD_WriteData(32);
     b76:	b9 e0       	ldi	r27, 0x09	; 9
     b78:	b0 93 00 01 	sts	0x0100, r27	; 0x800100 <__data_start>
				LCD_WriteData(32);
     b7c:	81 e1       	ldi	r24, 0x11	; 17
     b7e:	c0 da       	rcall	.-2688   	; 0x100 <LCD_Cursor>
				LCD_WriteData(32);
     b80:	80 e2       	ldi	r24, 0x20	; 32
     b82:	d5 da       	rcall	.-2646   	; 0x12e <LCD_WriteData>
     b84:	80 e2       	ldi	r24, 0x20	; 32
				LCD_WriteData(32);
     b86:	d3 da       	rcall	.-2650   	; 0x12e <LCD_WriteData>
     b88:	80 e2       	ldi	r24, 0x20	; 32
     b8a:	d1 da       	rcall	.-2654   	; 0x12e <LCD_WriteData>
				LCD_Cursor(0);
     b8c:	80 e2       	ldi	r24, 0x20	; 32
     b8e:	cf da       	rcall	.-2658   	; 0x12e <LCD_WriteData>
     b90:	80 e2       	ldi	r24, 0x20	; 32
			}
			SetAlarmElapsed = 0;
     b92:	cd da       	rcall	.-2662   	; 0x12e <LCD_WriteData>
     b94:	80 e2       	ldi	r24, 0x20	; 32
     b96:	cb da       	rcall	.-2666   	; 0x12e <LCD_WriteData>
     b98:	80 e2       	ldi	r24, 0x20	; 32
     b9a:	c9 da       	rcall	.-2670   	; 0x12e <LCD_WriteData>
     b9c:	80 e2       	ldi	r24, 0x20	; 32
     b9e:	c7 da       	rcall	.-2674   	; 0x12e <LCD_WriteData>
     ba0:	80 e2       	ldi	r24, 0x20	; 32
     ba2:	c5 da       	rcall	.-2678   	; 0x12e <LCD_WriteData>
     ba4:	80 e0       	ldi	r24, 0x00	; 0
     ba6:	ac da       	rcall	.-2728   	; 0x100 <LCD_Cursor>
     ba8:	41 2c       	mov	r4, r1
     baa:	51 2c       	mov	r5, r1
     bac:	32 01       	movw	r6, r4
     bae:	0f c0       	rjmp	.+30     	; 0xbce <main+0x204>
     bb0:	41 2c       	mov	r4, r1
     bb2:	51 2c       	mov	r5, r1
     bb4:	32 01       	movw	r6, r4
		}
		if(CheckAlarmElapsed >= 250){
     bb6:	0b c0       	rjmp	.+22     	; 0xbce <main+0x204>
     bb8:	41 2c       	mov	r4, r1
     bba:	51 2c       	mov	r5, r1
     bbc:	32 01       	movw	r6, r4
     bbe:	07 c0       	rjmp	.+14     	; 0xbce <main+0x204>
     bc0:	41 2c       	mov	r4, r1
     bc2:	51 2c       	mov	r5, r1
			if (tmpA == 0x10){
     bc4:	32 01       	movw	r6, r4
     bc6:	03 c0       	rjmp	.+6      	; 0xbce <main+0x204>
     bc8:	41 2c       	mov	r4, r1
				timer = 0;
     bca:	51 2c       	mov	r5, r1
     bcc:	32 01       	movw	r6, r4
     bce:	2a ef       	ldi	r18, 0xFA	; 250
     bd0:	c2 16       	cp	r12, r18
     bd2:	d1 04       	cpc	r13, r1
     bd4:	e1 04       	cpc	r14, r1
     bd6:	f1 04       	cpc	r15, r1
     bd8:	08 f4       	brcc	.+2      	; 0xbdc <main+0x212>
				snooze = false;
     bda:	4e c0       	rjmp	.+156    	; 0xc78 <main+0x2ae>
     bdc:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <tmpA>
				alarm = false;
				set_PWM(0);
     be0:	80 31       	cpi	r24, 0x10	; 16
     be2:	d1 f4       	brne	.+52     	; 0xc18 <main+0x24e>
				alarmEN = !alarmEN;
     be4:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <timer>
     be8:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <timer+0x1>
			}
			CHECK_FSM();
			if(alarmEN == false && contTIME == false && contALARM == false){
     bec:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <timer+0x2>
     bf0:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <timer+0x3>
     bf4:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <snooze>
     bf8:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <alarm>
     bfc:	60 e0       	ldi	r22, 0x00	; 0
     bfe:	70 e0       	ldi	r23, 0x00	; 0
     c00:	cb 01       	movw	r24, r22
				LCD_Cursor(17);
     c02:	0f db       	rcall	.-2530   	; 0x222 <set_PWM>
     c04:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <alarmEN>
				LCD_WriteData(32);
     c08:	91 e0       	ldi	r25, 0x01	; 1
     c0a:	89 27       	eor	r24, r25
     c0c:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <alarmEN>
				LCD_WriteData(32);
     c10:	03 c0       	rjmp	.+6      	; 0xc18 <main+0x24e>
     c12:	41 2c       	mov	r4, r1
				LCD_WriteData(32);
     c14:	51 2c       	mov	r5, r1
     c16:	32 01       	movw	r6, r4
     c18:	a4 dd       	rcall	.-1208   	; 0x762 <CHECK_FSM>
				LCD_WriteData(32);
     c1a:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <alarmEN>
     c1e:	81 11       	cpse	r24, r1
				LCD_WriteData(32);
     c20:	20 c0       	rjmp	.+64     	; 0xc62 <main+0x298>
     c22:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <contTIME>
				LCD_WriteData(32);
     c26:	81 11       	cpse	r24, r1
     c28:	20 c0       	rjmp	.+64     	; 0xc6a <main+0x2a0>
     c2a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <contALARM>
				LCD_WriteData(32);
     c2e:	81 11       	cpse	r24, r1
     c30:	20 c0       	rjmp	.+64     	; 0xc72 <main+0x2a8>
				LCD_WriteData(32);
     c32:	81 e1       	ldi	r24, 0x11	; 17
     c34:	65 da       	rcall	.-2870   	; 0x100 <LCD_Cursor>
     c36:	80 e2       	ldi	r24, 0x20	; 32
				LCD_Cursor(0);
     c38:	7a da       	rcall	.-2828   	; 0x12e <LCD_WriteData>
     c3a:	80 e2       	ldi	r24, 0x20	; 32
     c3c:	78 da       	rcall	.-2832   	; 0x12e <LCD_WriteData>
			}
			CheckAlarmElapsed = 0;
     c3e:	80 e2       	ldi	r24, 0x20	; 32
     c40:	76 da       	rcall	.-2836   	; 0x12e <LCD_WriteData>
     c42:	80 e2       	ldi	r24, 0x20	; 32
     c44:	74 da       	rcall	.-2840   	; 0x12e <LCD_WriteData>
     c46:	80 e2       	ldi	r24, 0x20	; 32
     c48:	72 da       	rcall	.-2844   	; 0x12e <LCD_WriteData>
     c4a:	80 e2       	ldi	r24, 0x20	; 32
     c4c:	70 da       	rcall	.-2848   	; 0x12e <LCD_WriteData>
     c4e:	80 e2       	ldi	r24, 0x20	; 32
     c50:	6e da       	rcall	.-2852   	; 0x12e <LCD_WriteData>
     c52:	80 e2       	ldi	r24, 0x20	; 32
     c54:	6c da       	rcall	.-2856   	; 0x12e <LCD_WriteData>
     c56:	80 e0       	ldi	r24, 0x00	; 0
     c58:	53 da       	rcall	.-2906   	; 0x100 <LCD_Cursor>
     c5a:	c1 2c       	mov	r12, r1
		}
		while (!TimerFlag){
     c5c:	d1 2c       	mov	r13, r1
     c5e:	76 01       	movw	r14, r12
     c60:	0b c0       	rjmp	.+22     	; 0xc78 <main+0x2ae>
     c62:	c1 2c       	mov	r12, r1
			continue;
		}
		TimerFlag = 0;
     c64:	d1 2c       	mov	r13, r1
     c66:	76 01       	movw	r14, r12
		TimeElapsed += 1;
     c68:	07 c0       	rjmp	.+14     	; 0xc78 <main+0x2ae>
     c6a:	c1 2c       	mov	r12, r1
     c6c:	d1 2c       	mov	r13, r1
     c6e:	76 01       	movw	r14, r12
     c70:	03 c0       	rjmp	.+6      	; 0xc78 <main+0x2ae>
     c72:	c1 2c       	mov	r12, r1
     c74:	d1 2c       	mov	r13, r1
     c76:	76 01       	movw	r14, r12
     c78:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <TimerFlag>
     c7c:	88 23       	and	r24, r24
		SetTimeElapsed += 1;
     c7e:	e1 f3       	breq	.-8      	; 0xc78 <main+0x2ae>
     c80:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <TimerFlag>
     c84:	89 81       	ldd	r24, Y+1	; 0x01
     c86:	9a 81       	ldd	r25, Y+2	; 0x02
		ClockTimeElapsed += 1;
     c88:	ab 81       	ldd	r26, Y+3	; 0x03
     c8a:	bc 81       	ldd	r27, Y+4	; 0x04
     c8c:	01 96       	adiw	r24, 0x01	; 1
     c8e:	a1 1d       	adc	r26, r1
     c90:	b1 1d       	adc	r27, r1
     c92:	89 83       	std	Y+1, r24	; 0x01
     c94:	9a 83       	std	Y+2, r25	; 0x02
     c96:	ab 83       	std	Y+3, r26	; 0x03
     c98:	bc 83       	std	Y+4, r27	; 0x04
     c9a:	9f ef       	ldi	r25, 0xFF	; 255
     c9c:	89 1a       	sub	r8, r25
		SetAlarmElapsed += 1;
     c9e:	99 0a       	sbc	r9, r25
     ca0:	a9 0a       	sbc	r10, r25
     ca2:	b9 0a       	sbc	r11, r25
     ca4:	8d 81       	ldd	r24, Y+5	; 0x05
     ca6:	9e 81       	ldd	r25, Y+6	; 0x06
		CheckAlarmElapsed += 1;
     ca8:	af 81       	ldd	r26, Y+7	; 0x07
     caa:	b8 85       	ldd	r27, Y+8	; 0x08
     cac:	01 96       	adiw	r24, 0x01	; 1
     cae:	a1 1d       	adc	r26, r1
     cb0:	b1 1d       	adc	r27, r1
	PWM_on();
	LCD_init();
	TimerSet(1);
	TimerOn();
	while(1) {
		tmpA = ~PINA;
     cb2:	8d 83       	std	Y+5, r24	; 0x05
     cb4:	9e 83       	std	Y+6, r25	; 0x06
     cb6:	af 83       	std	Y+7, r26	; 0x07
     cb8:	b8 87       	std	Y+8, r27	; 0x08
		if(TimeElapsed >= 1000){
     cba:	9f ef       	ldi	r25, 0xFF	; 255
     cbc:	49 1a       	sub	r4, r25
     cbe:	59 0a       	sbc	r5, r25
     cc0:	69 0a       	sbc	r6, r25
     cc2:	79 0a       	sbc	r7, r25
     cc4:	af ef       	ldi	r26, 0xFF	; 255
     cc6:	ca 1a       	sub	r12, r26
     cc8:	da 0a       	sbc	r13, r26
     cca:	ea 0a       	sbc	r14, r26
     ccc:	fa 0a       	sbc	r15, r26
     cce:	80 b1       	in	r24, 0x00	; 0
			ClockTimeElapsed = 0;
		}
		if(SetTimeElapsed >= 150){
			if(tmpA == 0x04 && !contALARM)
				contTIME = !contTIME;
			if(contTIME && !contALARM)
     cd0:	80 95       	com	r24
     cd2:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <tmpA>
     cd6:	89 81       	ldd	r24, Y+1	; 0x01
     cd8:	9a 81       	ldd	r25, Y+2	; 0x02
				LCD_WriteData(32);
				LCD_Cursor(0);
			}
			SetTimeElapsed = 0;
		}
		if (SetAlarmElapsed >= 150)
     cda:	ab 81       	ldd	r26, Y+3	; 0x03
     cdc:	bc 81       	ldd	r27, Y+4	; 0x04
     cde:	88 3e       	cpi	r24, 0xE8	; 232
     ce0:	93 40       	sbci	r25, 0x03	; 3
     ce2:	a1 05       	cpc	r26, r1
     ce4:	b1 05       	cpc	r27, r1
     ce6:	08 f4       	brcc	.+2      	; 0xcea <main+0x320>
				LCD_WriteData(32);
				LCD_WriteData(32);
				LCD_WriteData(32);
				LCD_Cursor(0);
			}
			SetTimeElapsed = 0;
     ce8:	a6 ce       	rjmp	.-692    	; 0xa36 <main+0x6c>
     cea:	a0 ce       	rjmp	.-704    	; 0xa2c <main+0x62>
     cec:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <contTIME>
		}
		if (SetAlarmElapsed >= 150)
		{
			if(tmpA == 0x08 && !contTIME)
				contALARM = !contALARM;
			if(contALARM && !contTIME){
     cf0:	81 11       	cpse	r24, r1
     cf2:	06 cf       	rjmp	.-500    	; 0xb00 <main+0x136>
     cf4:	d6 ce       	rjmp	.-596    	; 0xaa2 <main+0xd8>
     cf6:	86 e9       	ldi	r24, 0x96	; 150
     cf8:	48 16       	cp	r4, r24
				LCD_WriteData(32);
				LCD_Cursor(0);
			}
			SetAlarmElapsed = 0;
		}
		if(CheckAlarmElapsed >= 250){
     cfa:	51 04       	cpc	r5, r1
     cfc:	61 04       	cpc	r6, r1
     cfe:	71 04       	cpc	r7, r1
     d00:	08 f0       	brcs	.+2      	; 0xd04 <main+0x33a>
     d02:	19 cf       	rjmp	.-462    	; 0xb36 <main+0x16c>
     d04:	81 2c       	mov	r8, r1
     d06:	91 2c       	mov	r9, r1
				LCD_WriteData(32);
				LCD_WriteData(32);
				LCD_WriteData(32);
				LCD_Cursor(0);
			}
			SetAlarmElapsed = 0;
     d08:	54 01       	movw	r10, r8
     d0a:	61 cf       	rjmp	.-318    	; 0xbce <main+0x204>
     d0c:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <contALARM>
     d10:	81 11       	cpse	r24, r1
     d12:	5a cf       	rjmp	.-332    	; 0xbc8 <main+0x1fe>
     d14:	26 cf       	rjmp	.-436    	; 0xb62 <main+0x198>
     d16:	9a ef       	ldi	r25, 0xFA	; 250
     d18:	c9 16       	cp	r12, r25
     d1a:	d1 04       	cpc	r13, r1
     d1c:	e1 04       	cpc	r14, r1
     d1e:	f1 04       	cpc	r15, r1
     d20:	08 f0       	brcs	.+2      	; 0xd24 <main+0x35a>
     d22:	77 cf       	rjmp	.-274    	; 0xc12 <main+0x248>
     d24:	41 2c       	mov	r4, r1
     d26:	51 2c       	mov	r5, r1
     d28:	32 01       	movw	r6, r4
     d2a:	a6 cf       	rjmp	.-180    	; 0xc78 <main+0x2ae>

00000d2c <__cmpsf2>:
     d2c:	9c d0       	rcall	.+312    	; 0xe66 <__fp_cmp>
     d2e:	08 f4       	brcc	.+2      	; 0xd32 <__cmpsf2+0x6>
     d30:	81 e0       	ldi	r24, 0x01	; 1
     d32:	08 95       	ret

00000d34 <__divsf3>:
     d34:	0c d0       	rcall	.+24     	; 0xd4e <__divsf3x>
     d36:	d2 c0       	rjmp	.+420    	; 0xedc <__fp_round>
     d38:	ca d0       	rcall	.+404    	; 0xece <__fp_pscB>
     d3a:	40 f0       	brcs	.+16     	; 0xd4c <__divsf3+0x18>
     d3c:	c1 d0       	rcall	.+386    	; 0xec0 <__fp_pscA>
     d3e:	30 f0       	brcs	.+12     	; 0xd4c <__divsf3+0x18>
     d40:	21 f4       	brne	.+8      	; 0xd4a <__divsf3+0x16>
     d42:	5f 3f       	cpi	r21, 0xFF	; 255
     d44:	19 f0       	breq	.+6      	; 0xd4c <__divsf3+0x18>
     d46:	b3 c0       	rjmp	.+358    	; 0xeae <__fp_inf>
     d48:	51 11       	cpse	r21, r1
     d4a:	fc c0       	rjmp	.+504    	; 0xf44 <__fp_szero>
     d4c:	b6 c0       	rjmp	.+364    	; 0xeba <__fp_nan>

00000d4e <__divsf3x>:
     d4e:	d7 d0       	rcall	.+430    	; 0xefe <__fp_split3>
     d50:	98 f3       	brcs	.-26     	; 0xd38 <__divsf3+0x4>

00000d52 <__divsf3_pse>:
     d52:	99 23       	and	r25, r25
     d54:	c9 f3       	breq	.-14     	; 0xd48 <__divsf3+0x14>
     d56:	55 23       	and	r21, r21
     d58:	b1 f3       	breq	.-20     	; 0xd46 <__divsf3+0x12>
     d5a:	95 1b       	sub	r25, r21
     d5c:	55 0b       	sbc	r21, r21
     d5e:	bb 27       	eor	r27, r27
     d60:	aa 27       	eor	r26, r26
     d62:	62 17       	cp	r22, r18
     d64:	73 07       	cpc	r23, r19
     d66:	84 07       	cpc	r24, r20
     d68:	38 f0       	brcs	.+14     	; 0xd78 <__divsf3_pse+0x26>
     d6a:	9f 5f       	subi	r25, 0xFF	; 255
     d6c:	5f 4f       	sbci	r21, 0xFF	; 255
     d6e:	22 0f       	add	r18, r18
     d70:	33 1f       	adc	r19, r19
     d72:	44 1f       	adc	r20, r20
     d74:	aa 1f       	adc	r26, r26
     d76:	a9 f3       	breq	.-22     	; 0xd62 <__divsf3_pse+0x10>
     d78:	33 d0       	rcall	.+102    	; 0xde0 <__divsf3_pse+0x8e>
     d7a:	0e 2e       	mov	r0, r30
     d7c:	3a f0       	brmi	.+14     	; 0xd8c <__divsf3_pse+0x3a>
     d7e:	e0 e8       	ldi	r30, 0x80	; 128
     d80:	30 d0       	rcall	.+96     	; 0xde2 <__divsf3_pse+0x90>
     d82:	91 50       	subi	r25, 0x01	; 1
     d84:	50 40       	sbci	r21, 0x00	; 0
     d86:	e6 95       	lsr	r30
     d88:	00 1c       	adc	r0, r0
     d8a:	ca f7       	brpl	.-14     	; 0xd7e <__divsf3_pse+0x2c>
     d8c:	29 d0       	rcall	.+82     	; 0xde0 <__divsf3_pse+0x8e>
     d8e:	fe 2f       	mov	r31, r30
     d90:	27 d0       	rcall	.+78     	; 0xde0 <__divsf3_pse+0x8e>
     d92:	66 0f       	add	r22, r22
     d94:	77 1f       	adc	r23, r23
     d96:	88 1f       	adc	r24, r24
     d98:	bb 1f       	adc	r27, r27
     d9a:	26 17       	cp	r18, r22
     d9c:	37 07       	cpc	r19, r23
     d9e:	48 07       	cpc	r20, r24
     da0:	ab 07       	cpc	r26, r27
     da2:	b0 e8       	ldi	r27, 0x80	; 128
     da4:	09 f0       	breq	.+2      	; 0xda8 <__divsf3_pse+0x56>
     da6:	bb 0b       	sbc	r27, r27
     da8:	80 2d       	mov	r24, r0
     daa:	bf 01       	movw	r22, r30
     dac:	ff 27       	eor	r31, r31
     dae:	93 58       	subi	r25, 0x83	; 131
     db0:	5f 4f       	sbci	r21, 0xFF	; 255
     db2:	2a f0       	brmi	.+10     	; 0xdbe <__divsf3_pse+0x6c>
     db4:	9e 3f       	cpi	r25, 0xFE	; 254
     db6:	51 05       	cpc	r21, r1
     db8:	68 f0       	brcs	.+26     	; 0xdd4 <__divsf3_pse+0x82>
     dba:	79 c0       	rjmp	.+242    	; 0xeae <__fp_inf>
     dbc:	c3 c0       	rjmp	.+390    	; 0xf44 <__fp_szero>
     dbe:	5f 3f       	cpi	r21, 0xFF	; 255
     dc0:	ec f3       	brlt	.-6      	; 0xdbc <__divsf3_pse+0x6a>
     dc2:	98 3e       	cpi	r25, 0xE8	; 232
     dc4:	dc f3       	brlt	.-10     	; 0xdbc <__divsf3_pse+0x6a>
     dc6:	86 95       	lsr	r24
     dc8:	77 95       	ror	r23
     dca:	67 95       	ror	r22
     dcc:	b7 95       	ror	r27
     dce:	f7 95       	ror	r31
     dd0:	9f 5f       	subi	r25, 0xFF	; 255
     dd2:	c9 f7       	brne	.-14     	; 0xdc6 <__divsf3_pse+0x74>
     dd4:	88 0f       	add	r24, r24
     dd6:	91 1d       	adc	r25, r1
     dd8:	96 95       	lsr	r25
     dda:	87 95       	ror	r24
     ddc:	97 f9       	bld	r25, 7
     dde:	08 95       	ret
     de0:	e1 e0       	ldi	r30, 0x01	; 1
     de2:	66 0f       	add	r22, r22
     de4:	77 1f       	adc	r23, r23
     de6:	88 1f       	adc	r24, r24
     de8:	bb 1f       	adc	r27, r27
     dea:	62 17       	cp	r22, r18
     dec:	73 07       	cpc	r23, r19
     dee:	84 07       	cpc	r24, r20
     df0:	ba 07       	cpc	r27, r26
     df2:	20 f0       	brcs	.+8      	; 0xdfc <__divsf3_pse+0xaa>
     df4:	62 1b       	sub	r22, r18
     df6:	73 0b       	sbc	r23, r19
     df8:	84 0b       	sbc	r24, r20
     dfa:	ba 0b       	sbc	r27, r26
     dfc:	ee 1f       	adc	r30, r30
     dfe:	88 f7       	brcc	.-30     	; 0xde2 <__divsf3_pse+0x90>
     e00:	e0 95       	com	r30
     e02:	08 95       	ret

00000e04 <__fixsfsi>:
     e04:	04 d0       	rcall	.+8      	; 0xe0e <__fixunssfsi>
     e06:	68 94       	set
     e08:	b1 11       	cpse	r27, r1
     e0a:	9c c0       	rjmp	.+312    	; 0xf44 <__fp_szero>
     e0c:	08 95       	ret

00000e0e <__fixunssfsi>:
     e0e:	7f d0       	rcall	.+254    	; 0xf0e <__fp_splitA>
     e10:	88 f0       	brcs	.+34     	; 0xe34 <__fixunssfsi+0x26>
     e12:	9f 57       	subi	r25, 0x7F	; 127
     e14:	90 f0       	brcs	.+36     	; 0xe3a <__fixunssfsi+0x2c>
     e16:	b9 2f       	mov	r27, r25
     e18:	99 27       	eor	r25, r25
     e1a:	b7 51       	subi	r27, 0x17	; 23
     e1c:	a0 f0       	brcs	.+40     	; 0xe46 <__fixunssfsi+0x38>
     e1e:	d1 f0       	breq	.+52     	; 0xe54 <__fixunssfsi+0x46>
     e20:	66 0f       	add	r22, r22
     e22:	77 1f       	adc	r23, r23
     e24:	88 1f       	adc	r24, r24
     e26:	99 1f       	adc	r25, r25
     e28:	1a f0       	brmi	.+6      	; 0xe30 <__fixunssfsi+0x22>
     e2a:	ba 95       	dec	r27
     e2c:	c9 f7       	brne	.-14     	; 0xe20 <__fixunssfsi+0x12>
     e2e:	12 c0       	rjmp	.+36     	; 0xe54 <__fixunssfsi+0x46>
     e30:	b1 30       	cpi	r27, 0x01	; 1
     e32:	81 f0       	breq	.+32     	; 0xe54 <__fixunssfsi+0x46>
     e34:	86 d0       	rcall	.+268    	; 0xf42 <__fp_zero>
     e36:	b1 e0       	ldi	r27, 0x01	; 1
     e38:	08 95       	ret
     e3a:	83 c0       	rjmp	.+262    	; 0xf42 <__fp_zero>
     e3c:	67 2f       	mov	r22, r23
     e3e:	78 2f       	mov	r23, r24
     e40:	88 27       	eor	r24, r24
     e42:	b8 5f       	subi	r27, 0xF8	; 248
     e44:	39 f0       	breq	.+14     	; 0xe54 <__fixunssfsi+0x46>
     e46:	b9 3f       	cpi	r27, 0xF9	; 249
     e48:	cc f3       	brlt	.-14     	; 0xe3c <__fixunssfsi+0x2e>
     e4a:	86 95       	lsr	r24
     e4c:	77 95       	ror	r23
     e4e:	67 95       	ror	r22
     e50:	b3 95       	inc	r27
     e52:	d9 f7       	brne	.-10     	; 0xe4a <__fixunssfsi+0x3c>
     e54:	3e f4       	brtc	.+14     	; 0xe64 <__fixunssfsi+0x56>
     e56:	90 95       	com	r25
     e58:	80 95       	com	r24
     e5a:	70 95       	com	r23
     e5c:	61 95       	neg	r22
     e5e:	7f 4f       	sbci	r23, 0xFF	; 255
     e60:	8f 4f       	sbci	r24, 0xFF	; 255
     e62:	9f 4f       	sbci	r25, 0xFF	; 255
     e64:	08 95       	ret

00000e66 <__fp_cmp>:
     e66:	99 0f       	add	r25, r25
     e68:	00 08       	sbc	r0, r0
     e6a:	55 0f       	add	r21, r21
     e6c:	aa 0b       	sbc	r26, r26
     e6e:	e0 e8       	ldi	r30, 0x80	; 128
     e70:	fe ef       	ldi	r31, 0xFE	; 254
     e72:	16 16       	cp	r1, r22
     e74:	17 06       	cpc	r1, r23
     e76:	e8 07       	cpc	r30, r24
     e78:	f9 07       	cpc	r31, r25
     e7a:	c0 f0       	brcs	.+48     	; 0xeac <__fp_cmp+0x46>
     e7c:	12 16       	cp	r1, r18
     e7e:	13 06       	cpc	r1, r19
     e80:	e4 07       	cpc	r30, r20
     e82:	f5 07       	cpc	r31, r21
     e84:	98 f0       	brcs	.+38     	; 0xeac <__fp_cmp+0x46>
     e86:	62 1b       	sub	r22, r18
     e88:	73 0b       	sbc	r23, r19
     e8a:	84 0b       	sbc	r24, r20
     e8c:	95 0b       	sbc	r25, r21
     e8e:	39 f4       	brne	.+14     	; 0xe9e <__fp_cmp+0x38>
     e90:	0a 26       	eor	r0, r26
     e92:	61 f0       	breq	.+24     	; 0xeac <__fp_cmp+0x46>
     e94:	23 2b       	or	r18, r19
     e96:	24 2b       	or	r18, r20
     e98:	25 2b       	or	r18, r21
     e9a:	21 f4       	brne	.+8      	; 0xea4 <__fp_cmp+0x3e>
     e9c:	08 95       	ret
     e9e:	0a 26       	eor	r0, r26
     ea0:	09 f4       	brne	.+2      	; 0xea4 <__fp_cmp+0x3e>
     ea2:	a1 40       	sbci	r26, 0x01	; 1
     ea4:	a6 95       	lsr	r26
     ea6:	8f ef       	ldi	r24, 0xFF	; 255
     ea8:	81 1d       	adc	r24, r1
     eaa:	81 1d       	adc	r24, r1
     eac:	08 95       	ret

00000eae <__fp_inf>:
     eae:	97 f9       	bld	r25, 7
     eb0:	9f 67       	ori	r25, 0x7F	; 127
     eb2:	80 e8       	ldi	r24, 0x80	; 128
     eb4:	70 e0       	ldi	r23, 0x00	; 0
     eb6:	60 e0       	ldi	r22, 0x00	; 0
     eb8:	08 95       	ret

00000eba <__fp_nan>:
     eba:	9f ef       	ldi	r25, 0xFF	; 255
     ebc:	80 ec       	ldi	r24, 0xC0	; 192
     ebe:	08 95       	ret

00000ec0 <__fp_pscA>:
     ec0:	00 24       	eor	r0, r0
     ec2:	0a 94       	dec	r0
     ec4:	16 16       	cp	r1, r22
     ec6:	17 06       	cpc	r1, r23
     ec8:	18 06       	cpc	r1, r24
     eca:	09 06       	cpc	r0, r25
     ecc:	08 95       	ret

00000ece <__fp_pscB>:
     ece:	00 24       	eor	r0, r0
     ed0:	0a 94       	dec	r0
     ed2:	12 16       	cp	r1, r18
     ed4:	13 06       	cpc	r1, r19
     ed6:	14 06       	cpc	r1, r20
     ed8:	05 06       	cpc	r0, r21
     eda:	08 95       	ret

00000edc <__fp_round>:
     edc:	09 2e       	mov	r0, r25
     ede:	03 94       	inc	r0
     ee0:	00 0c       	add	r0, r0
     ee2:	11 f4       	brne	.+4      	; 0xee8 <__fp_round+0xc>
     ee4:	88 23       	and	r24, r24
     ee6:	52 f0       	brmi	.+20     	; 0xefc <__fp_round+0x20>
     ee8:	bb 0f       	add	r27, r27
     eea:	40 f4       	brcc	.+16     	; 0xefc <__fp_round+0x20>
     eec:	bf 2b       	or	r27, r31
     eee:	11 f4       	brne	.+4      	; 0xef4 <__fp_round+0x18>
     ef0:	60 ff       	sbrs	r22, 0
     ef2:	04 c0       	rjmp	.+8      	; 0xefc <__fp_round+0x20>
     ef4:	6f 5f       	subi	r22, 0xFF	; 255
     ef6:	7f 4f       	sbci	r23, 0xFF	; 255
     ef8:	8f 4f       	sbci	r24, 0xFF	; 255
     efa:	9f 4f       	sbci	r25, 0xFF	; 255
     efc:	08 95       	ret

00000efe <__fp_split3>:
     efe:	57 fd       	sbrc	r21, 7
     f00:	90 58       	subi	r25, 0x80	; 128
     f02:	44 0f       	add	r20, r20
     f04:	55 1f       	adc	r21, r21
     f06:	59 f0       	breq	.+22     	; 0xf1e <__fp_splitA+0x10>
     f08:	5f 3f       	cpi	r21, 0xFF	; 255
     f0a:	71 f0       	breq	.+28     	; 0xf28 <__fp_splitA+0x1a>
     f0c:	47 95       	ror	r20

00000f0e <__fp_splitA>:
     f0e:	88 0f       	add	r24, r24
     f10:	97 fb       	bst	r25, 7
     f12:	99 1f       	adc	r25, r25
     f14:	61 f0       	breq	.+24     	; 0xf2e <__fp_splitA+0x20>
     f16:	9f 3f       	cpi	r25, 0xFF	; 255
     f18:	79 f0       	breq	.+30     	; 0xf38 <__fp_splitA+0x2a>
     f1a:	87 95       	ror	r24
     f1c:	08 95       	ret
     f1e:	12 16       	cp	r1, r18
     f20:	13 06       	cpc	r1, r19
     f22:	14 06       	cpc	r1, r20
     f24:	55 1f       	adc	r21, r21
     f26:	f2 cf       	rjmp	.-28     	; 0xf0c <__fp_split3+0xe>
     f28:	46 95       	lsr	r20
     f2a:	f1 df       	rcall	.-30     	; 0xf0e <__fp_splitA>
     f2c:	08 c0       	rjmp	.+16     	; 0xf3e <__fp_splitA+0x30>
     f2e:	16 16       	cp	r1, r22
     f30:	17 06       	cpc	r1, r23
     f32:	18 06       	cpc	r1, r24
     f34:	99 1f       	adc	r25, r25
     f36:	f1 cf       	rjmp	.-30     	; 0xf1a <__fp_splitA+0xc>
     f38:	86 95       	lsr	r24
     f3a:	71 05       	cpc	r23, r1
     f3c:	61 05       	cpc	r22, r1
     f3e:	08 94       	sec
     f40:	08 95       	ret

00000f42 <__fp_zero>:
     f42:	e8 94       	clt

00000f44 <__fp_szero>:
     f44:	bb 27       	eor	r27, r27
     f46:	66 27       	eor	r22, r22
     f48:	77 27       	eor	r23, r23
     f4a:	cb 01       	movw	r24, r22
     f4c:	97 f9       	bld	r25, 7
     f4e:	08 95       	ret

00000f50 <__gesf2>:
     f50:	8a df       	rcall	.-236    	; 0xe66 <__fp_cmp>
     f52:	08 f4       	brcc	.+2      	; 0xf56 <__gesf2+0x6>
     f54:	8f ef       	ldi	r24, 0xFF	; 255
     f56:	08 95       	ret

00000f58 <__mulsf3>:
     f58:	0b d0       	rcall	.+22     	; 0xf70 <__mulsf3x>
     f5a:	c0 cf       	rjmp	.-128    	; 0xedc <__fp_round>
     f5c:	b1 df       	rcall	.-158    	; 0xec0 <__fp_pscA>
     f5e:	28 f0       	brcs	.+10     	; 0xf6a <__mulsf3+0x12>
     f60:	b6 df       	rcall	.-148    	; 0xece <__fp_pscB>
     f62:	18 f0       	brcs	.+6      	; 0xf6a <__mulsf3+0x12>
     f64:	95 23       	and	r25, r21
     f66:	09 f0       	breq	.+2      	; 0xf6a <__mulsf3+0x12>
     f68:	a2 cf       	rjmp	.-188    	; 0xeae <__fp_inf>
     f6a:	a7 cf       	rjmp	.-178    	; 0xeba <__fp_nan>
     f6c:	11 24       	eor	r1, r1
     f6e:	ea cf       	rjmp	.-44     	; 0xf44 <__fp_szero>

00000f70 <__mulsf3x>:
     f70:	c6 df       	rcall	.-116    	; 0xefe <__fp_split3>
     f72:	a0 f3       	brcs	.-24     	; 0xf5c <__mulsf3+0x4>

00000f74 <__mulsf3_pse>:
     f74:	95 9f       	mul	r25, r21
     f76:	d1 f3       	breq	.-12     	; 0xf6c <__mulsf3+0x14>
     f78:	95 0f       	add	r25, r21
     f7a:	50 e0       	ldi	r21, 0x00	; 0
     f7c:	55 1f       	adc	r21, r21
     f7e:	62 9f       	mul	r22, r18
     f80:	f0 01       	movw	r30, r0
     f82:	72 9f       	mul	r23, r18
     f84:	bb 27       	eor	r27, r27
     f86:	f0 0d       	add	r31, r0
     f88:	b1 1d       	adc	r27, r1
     f8a:	63 9f       	mul	r22, r19
     f8c:	aa 27       	eor	r26, r26
     f8e:	f0 0d       	add	r31, r0
     f90:	b1 1d       	adc	r27, r1
     f92:	aa 1f       	adc	r26, r26
     f94:	64 9f       	mul	r22, r20
     f96:	66 27       	eor	r22, r22
     f98:	b0 0d       	add	r27, r0
     f9a:	a1 1d       	adc	r26, r1
     f9c:	66 1f       	adc	r22, r22
     f9e:	82 9f       	mul	r24, r18
     fa0:	22 27       	eor	r18, r18
     fa2:	b0 0d       	add	r27, r0
     fa4:	a1 1d       	adc	r26, r1
     fa6:	62 1f       	adc	r22, r18
     fa8:	73 9f       	mul	r23, r19
     faa:	b0 0d       	add	r27, r0
     fac:	a1 1d       	adc	r26, r1
     fae:	62 1f       	adc	r22, r18
     fb0:	83 9f       	mul	r24, r19
     fb2:	a0 0d       	add	r26, r0
     fb4:	61 1d       	adc	r22, r1
     fb6:	22 1f       	adc	r18, r18
     fb8:	74 9f       	mul	r23, r20
     fba:	33 27       	eor	r19, r19
     fbc:	a0 0d       	add	r26, r0
     fbe:	61 1d       	adc	r22, r1
     fc0:	23 1f       	adc	r18, r19
     fc2:	84 9f       	mul	r24, r20
     fc4:	60 0d       	add	r22, r0
     fc6:	21 1d       	adc	r18, r1
     fc8:	82 2f       	mov	r24, r18
     fca:	76 2f       	mov	r23, r22
     fcc:	6a 2f       	mov	r22, r26
     fce:	11 24       	eor	r1, r1
     fd0:	9f 57       	subi	r25, 0x7F	; 127
     fd2:	50 40       	sbci	r21, 0x00	; 0
     fd4:	8a f0       	brmi	.+34     	; 0xff8 <__mulsf3_pse+0x84>
     fd6:	e1 f0       	breq	.+56     	; 0x1010 <__mulsf3_pse+0x9c>
     fd8:	88 23       	and	r24, r24
     fda:	4a f0       	brmi	.+18     	; 0xfee <__mulsf3_pse+0x7a>
     fdc:	ee 0f       	add	r30, r30
     fde:	ff 1f       	adc	r31, r31
     fe0:	bb 1f       	adc	r27, r27
     fe2:	66 1f       	adc	r22, r22
     fe4:	77 1f       	adc	r23, r23
     fe6:	88 1f       	adc	r24, r24
     fe8:	91 50       	subi	r25, 0x01	; 1
     fea:	50 40       	sbci	r21, 0x00	; 0
     fec:	a9 f7       	brne	.-22     	; 0xfd8 <__mulsf3_pse+0x64>
     fee:	9e 3f       	cpi	r25, 0xFE	; 254
     ff0:	51 05       	cpc	r21, r1
     ff2:	70 f0       	brcs	.+28     	; 0x1010 <__mulsf3_pse+0x9c>
     ff4:	5c cf       	rjmp	.-328    	; 0xeae <__fp_inf>
     ff6:	a6 cf       	rjmp	.-180    	; 0xf44 <__fp_szero>
     ff8:	5f 3f       	cpi	r21, 0xFF	; 255
     ffa:	ec f3       	brlt	.-6      	; 0xff6 <__mulsf3_pse+0x82>
     ffc:	98 3e       	cpi	r25, 0xE8	; 232
     ffe:	dc f3       	brlt	.-10     	; 0xff6 <__mulsf3_pse+0x82>
    1000:	86 95       	lsr	r24
    1002:	77 95       	ror	r23
    1004:	67 95       	ror	r22
    1006:	b7 95       	ror	r27
    1008:	f7 95       	ror	r31
    100a:	e7 95       	ror	r30
    100c:	9f 5f       	subi	r25, 0xFF	; 255
    100e:	c1 f7       	brne	.-16     	; 0x1000 <__mulsf3_pse+0x8c>
    1010:	fe 2b       	or	r31, r30
    1012:	88 0f       	add	r24, r24
    1014:	91 1d       	adc	r25, r1
    1016:	96 95       	lsr	r25
    1018:	87 95       	ror	r24
    101a:	97 f9       	bld	r25, 7
    101c:	08 95       	ret

0000101e <_exit>:
    101e:	f8 94       	cli

00001020 <__stop_program>:
    1020:	ff cf       	rjmp	.-2      	; 0x1020 <__stop_program>
